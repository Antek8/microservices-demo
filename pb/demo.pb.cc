// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

#include "demo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ad_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Address_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CartItem_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreditCardInfo_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Money_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OrderItem_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OrderResult_demo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Product_demo_2eproto;
namespace hipstershop {
class CartItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CartItem> _instance;
} _CartItem_default_instance_;
class AddItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddItemRequest> _instance;
} _AddItemRequest_default_instance_;
class EmptyCartRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmptyCartRequest> _instance;
} _EmptyCartRequest_default_instance_;
class GetCartRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCartRequest> _instance;
} _GetCartRequest_default_instance_;
class CartDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cart> _instance;
} _Cart_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class ListRecommendationsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListRecommendationsRequest> _instance;
} _ListRecommendationsRequest_default_instance_;
class ListRecommendationsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListRecommendationsResponse> _instance;
} _ListRecommendationsResponse_default_instance_;
class ProductDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Product> _instance;
} _Product_default_instance_;
class ListProductsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListProductsResponse> _instance;
} _ListProductsResponse_default_instance_;
class GetProductRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetProductRequest> _instance;
} _GetProductRequest_default_instance_;
class SearchProductsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchProductsRequest> _instance;
} _SearchProductsRequest_default_instance_;
class SearchProductsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchProductsResponse> _instance;
} _SearchProductsResponse_default_instance_;
class GetQuoteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetQuoteRequest> _instance;
} _GetQuoteRequest_default_instance_;
class GetQuoteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetQuoteResponse> _instance;
} _GetQuoteResponse_default_instance_;
class ShipOrderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShipOrderRequest> _instance;
} _ShipOrderRequest_default_instance_;
class ShipOrderResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShipOrderResponse> _instance;
} _ShipOrderResponse_default_instance_;
class AddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Address> _instance;
} _Address_default_instance_;
class MoneyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Money> _instance;
} _Money_default_instance_;
class GetSupportedCurrenciesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedCurrenciesResponse> _instance;
} _GetSupportedCurrenciesResponse_default_instance_;
class CurrencyConversionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CurrencyConversionRequest> _instance;
} _CurrencyConversionRequest_default_instance_;
class CreditCardInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditCardInfo> _instance;
} _CreditCardInfo_default_instance_;
class ChargeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChargeRequest> _instance;
} _ChargeRequest_default_instance_;
class ChargeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChargeResponse> _instance;
} _ChargeResponse_default_instance_;
class OrderItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OrderItem> _instance;
} _OrderItem_default_instance_;
class OrderResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OrderResult> _instance;
} _OrderResult_default_instance_;
class SendOrderConfirmationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendOrderConfirmationRequest> _instance;
} _SendOrderConfirmationRequest_default_instance_;
class PlaceOrderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlaceOrderRequest> _instance;
} _PlaceOrderRequest_default_instance_;
class PlaceOrderResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlaceOrderResponse> _instance;
} _PlaceOrderResponse_default_instance_;
class AdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdRequest> _instance;
} _AdRequest_default_instance_;
class AdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdResponse> _instance;
} _AdResponse_default_instance_;
class AdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ad> _instance;
} _Ad_default_instance_;
}  // namespace hipstershop
static void InitDefaultsscc_info_Ad_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Ad_default_instance_;
    new (ptr) ::hipstershop::Ad();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ad_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ad_demo_2eproto}, {}};

static void InitDefaultsscc_info_AdRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_AdRequest_default_instance_;
    new (ptr) ::hipstershop::AdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AdRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AdRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_AdResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_AdResponse_default_instance_;
    new (ptr) ::hipstershop::AdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AdResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AdResponse_demo_2eproto}, {
      &scc_info_Ad_demo_2eproto.base,}};

static void InitDefaultsscc_info_AddItemRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_AddItemRequest_default_instance_;
    new (ptr) ::hipstershop::AddItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddItemRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddItemRequest_demo_2eproto}, {
      &scc_info_CartItem_demo_2eproto.base,}};

static void InitDefaultsscc_info_Address_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Address_default_instance_;
    new (ptr) ::hipstershop::Address();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Address_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Address_demo_2eproto}, {}};

static void InitDefaultsscc_info_Cart_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Cart_default_instance_;
    new (ptr) ::hipstershop::Cart();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cart_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cart_demo_2eproto}, {
      &scc_info_CartItem_demo_2eproto.base,}};

static void InitDefaultsscc_info_CartItem_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_CartItem_default_instance_;
    new (ptr) ::hipstershop::CartItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CartItem_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CartItem_demo_2eproto}, {}};

static void InitDefaultsscc_info_ChargeRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ChargeRequest_default_instance_;
    new (ptr) ::hipstershop::ChargeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ChargeRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ChargeRequest_demo_2eproto}, {
      &scc_info_Money_demo_2eproto.base,
      &scc_info_CreditCardInfo_demo_2eproto.base,}};

static void InitDefaultsscc_info_ChargeResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ChargeResponse_default_instance_;
    new (ptr) ::hipstershop::ChargeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChargeResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChargeResponse_demo_2eproto}, {}};

static void InitDefaultsscc_info_CreditCardInfo_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_CreditCardInfo_default_instance_;
    new (ptr) ::hipstershop::CreditCardInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreditCardInfo_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreditCardInfo_demo_2eproto}, {}};

static void InitDefaultsscc_info_CurrencyConversionRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_CurrencyConversionRequest_default_instance_;
    new (ptr) ::hipstershop::CurrencyConversionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CurrencyConversionRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CurrencyConversionRequest_demo_2eproto}, {
      &scc_info_Money_demo_2eproto.base,}};

static void InitDefaultsscc_info_Empty_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Empty_default_instance_;
    new (ptr) ::hipstershop::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_demo_2eproto}, {}};

static void InitDefaultsscc_info_EmptyCartRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_EmptyCartRequest_default_instance_;
    new (ptr) ::hipstershop::EmptyCartRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmptyCartRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmptyCartRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_GetCartRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_GetCartRequest_default_instance_;
    new (ptr) ::hipstershop::GetCartRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCartRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCartRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_GetProductRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_GetProductRequest_default_instance_;
    new (ptr) ::hipstershop::GetProductRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetProductRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetProductRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_GetQuoteRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_GetQuoteRequest_default_instance_;
    new (ptr) ::hipstershop::GetQuoteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetQuoteRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetQuoteRequest_demo_2eproto}, {
      &scc_info_Address_demo_2eproto.base,
      &scc_info_CartItem_demo_2eproto.base,}};

static void InitDefaultsscc_info_GetQuoteResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_GetQuoteResponse_default_instance_;
    new (ptr) ::hipstershop::GetQuoteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetQuoteResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetQuoteResponse_demo_2eproto}, {
      &scc_info_Money_demo_2eproto.base,}};

static void InitDefaultsscc_info_GetSupportedCurrenciesResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_GetSupportedCurrenciesResponse_default_instance_;
    new (ptr) ::hipstershop::GetSupportedCurrenciesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedCurrenciesResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedCurrenciesResponse_demo_2eproto}, {}};

static void InitDefaultsscc_info_ListProductsResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ListProductsResponse_default_instance_;
    new (ptr) ::hipstershop::ListProductsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListProductsResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListProductsResponse_demo_2eproto}, {
      &scc_info_Product_demo_2eproto.base,}};

static void InitDefaultsscc_info_ListRecommendationsRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ListRecommendationsRequest_default_instance_;
    new (ptr) ::hipstershop::ListRecommendationsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListRecommendationsRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListRecommendationsRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_ListRecommendationsResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ListRecommendationsResponse_default_instance_;
    new (ptr) ::hipstershop::ListRecommendationsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListRecommendationsResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListRecommendationsResponse_demo_2eproto}, {}};

static void InitDefaultsscc_info_Money_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Money_default_instance_;
    new (ptr) ::hipstershop::Money();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Money_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Money_demo_2eproto}, {}};

static void InitDefaultsscc_info_OrderItem_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_OrderItem_default_instance_;
    new (ptr) ::hipstershop::OrderItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OrderItem_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_OrderItem_demo_2eproto}, {
      &scc_info_CartItem_demo_2eproto.base,
      &scc_info_Money_demo_2eproto.base,}};

static void InitDefaultsscc_info_OrderResult_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_OrderResult_default_instance_;
    new (ptr) ::hipstershop::OrderResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OrderResult_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_OrderResult_demo_2eproto}, {
      &scc_info_Money_demo_2eproto.base,
      &scc_info_Address_demo_2eproto.base,
      &scc_info_OrderItem_demo_2eproto.base,}};

static void InitDefaultsscc_info_PlaceOrderRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_PlaceOrderRequest_default_instance_;
    new (ptr) ::hipstershop::PlaceOrderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PlaceOrderRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PlaceOrderRequest_demo_2eproto}, {
      &scc_info_Address_demo_2eproto.base,
      &scc_info_CreditCardInfo_demo_2eproto.base,}};

static void InitDefaultsscc_info_PlaceOrderResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_PlaceOrderResponse_default_instance_;
    new (ptr) ::hipstershop::PlaceOrderResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlaceOrderResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlaceOrderResponse_demo_2eproto}, {
      &scc_info_OrderResult_demo_2eproto.base,}};

static void InitDefaultsscc_info_Product_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_Product_default_instance_;
    new (ptr) ::hipstershop::Product();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Product_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Product_demo_2eproto}, {
      &scc_info_Money_demo_2eproto.base,}};

static void InitDefaultsscc_info_SearchProductsRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_SearchProductsRequest_default_instance_;
    new (ptr) ::hipstershop::SearchProductsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SearchProductsRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SearchProductsRequest_demo_2eproto}, {}};

static void InitDefaultsscc_info_SearchProductsResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_SearchProductsResponse_default_instance_;
    new (ptr) ::hipstershop::SearchProductsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchProductsResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SearchProductsResponse_demo_2eproto}, {
      &scc_info_Product_demo_2eproto.base,}};

static void InitDefaultsscc_info_SendOrderConfirmationRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_SendOrderConfirmationRequest_default_instance_;
    new (ptr) ::hipstershop::SendOrderConfirmationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendOrderConfirmationRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendOrderConfirmationRequest_demo_2eproto}, {
      &scc_info_OrderResult_demo_2eproto.base,}};

static void InitDefaultsscc_info_ShipOrderRequest_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ShipOrderRequest_default_instance_;
    new (ptr) ::hipstershop::ShipOrderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ShipOrderRequest_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ShipOrderRequest_demo_2eproto}, {
      &scc_info_Address_demo_2eproto.base,
      &scc_info_CartItem_demo_2eproto.base,}};

static void InitDefaultsscc_info_ShipOrderResponse_demo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hipstershop::_ShipOrderResponse_default_instance_;
    new (ptr) ::hipstershop::ShipOrderResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShipOrderResponse_demo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShipOrderResponse_demo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_demo_2eproto[32];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_demo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_demo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_demo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CartItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CartItem, product_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::CartItem, quantity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AddItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AddItemRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::AddItemRequest, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::EmptyCartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::EmptyCartRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetCartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetCartRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Cart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Cart, user_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Cart, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListRecommendationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListRecommendationsRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListRecommendationsRequest, product_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListRecommendationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListRecommendationsResponse, product_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, name_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, description_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, picture_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, price_usd_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Product, categories_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListProductsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ListProductsResponse, products_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetProductRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetProductRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SearchProductsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SearchProductsRequest, query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SearchProductsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SearchProductsResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetQuoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetQuoteRequest, address_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetQuoteRequest, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetQuoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetQuoteResponse, cost_usd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ShipOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ShipOrderRequest, address_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::ShipOrderRequest, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ShipOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ShipOrderResponse, tracking_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, street_address_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, city_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, state_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, country_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Address, zip_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Money, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Money, currency_code_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Money, units_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Money, nanos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetSupportedCurrenciesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::GetSupportedCurrenciesResponse, currency_codes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CurrencyConversionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CurrencyConversionRequest, from_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::CurrencyConversionRequest, to_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CreditCardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::CreditCardInfo, credit_card_number_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::CreditCardInfo, credit_card_cvv_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::CreditCardInfo, credit_card_expiration_year_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::CreditCardInfo, credit_card_expiration_month_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ChargeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ChargeRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::ChargeRequest, credit_card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ChargeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::ChargeResponse, transaction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderItem, item_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderItem, cost_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, order_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, shipping_tracking_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, shipping_cost_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, shipping_address_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::OrderResult, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SendOrderConfirmationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::SendOrderConfirmationRequest, email_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::SendOrderConfirmationRequest, order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, user_currency_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, address_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, email_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderRequest, credit_card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::PlaceOrderResponse, order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AdRequest, context_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::AdResponse, ads_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Ad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hipstershop::Ad, redirect_url_),
  PROTOBUF_FIELD_OFFSET(::hipstershop::Ad, text_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::hipstershop::CartItem)},
  { 7, -1, sizeof(::hipstershop::AddItemRequest)},
  { 14, -1, sizeof(::hipstershop::EmptyCartRequest)},
  { 20, -1, sizeof(::hipstershop::GetCartRequest)},
  { 26, -1, sizeof(::hipstershop::Cart)},
  { 33, -1, sizeof(::hipstershop::Empty)},
  { 38, -1, sizeof(::hipstershop::ListRecommendationsRequest)},
  { 45, -1, sizeof(::hipstershop::ListRecommendationsResponse)},
  { 51, -1, sizeof(::hipstershop::Product)},
  { 62, -1, sizeof(::hipstershop::ListProductsResponse)},
  { 68, -1, sizeof(::hipstershop::GetProductRequest)},
  { 74, -1, sizeof(::hipstershop::SearchProductsRequest)},
  { 80, -1, sizeof(::hipstershop::SearchProductsResponse)},
  { 86, -1, sizeof(::hipstershop::GetQuoteRequest)},
  { 93, -1, sizeof(::hipstershop::GetQuoteResponse)},
  { 99, -1, sizeof(::hipstershop::ShipOrderRequest)},
  { 106, -1, sizeof(::hipstershop::ShipOrderResponse)},
  { 112, -1, sizeof(::hipstershop::Address)},
  { 122, -1, sizeof(::hipstershop::Money)},
  { 130, -1, sizeof(::hipstershop::GetSupportedCurrenciesResponse)},
  { 136, -1, sizeof(::hipstershop::CurrencyConversionRequest)},
  { 143, -1, sizeof(::hipstershop::CreditCardInfo)},
  { 152, -1, sizeof(::hipstershop::ChargeRequest)},
  { 159, -1, sizeof(::hipstershop::ChargeResponse)},
  { 165, -1, sizeof(::hipstershop::OrderItem)},
  { 172, -1, sizeof(::hipstershop::OrderResult)},
  { 182, -1, sizeof(::hipstershop::SendOrderConfirmationRequest)},
  { 189, -1, sizeof(::hipstershop::PlaceOrderRequest)},
  { 199, -1, sizeof(::hipstershop::PlaceOrderResponse)},
  { 205, -1, sizeof(::hipstershop::AdRequest)},
  { 211, -1, sizeof(::hipstershop::AdResponse)},
  { 217, -1, sizeof(::hipstershop::Ad)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_CartItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_AddItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_EmptyCartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_GetCartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Cart_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ListRecommendationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ListRecommendationsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Product_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ListProductsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_GetProductRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_SearchProductsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_SearchProductsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_GetQuoteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_GetQuoteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ShipOrderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ShipOrderResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Address_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Money_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_GetSupportedCurrenciesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_CurrencyConversionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_CreditCardInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ChargeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_ChargeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_OrderItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_OrderResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_SendOrderConfirmationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_PlaceOrderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_PlaceOrderResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_AdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_AdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hipstershop::_Ad_default_instance_),
};

const char descriptor_table_protodef_demo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ndemo.proto\022\013hipstershop\"0\n\010CartItem\022\022\n"
  "\nproduct_id\030\001 \001(\t\022\020\n\010quantity\030\002 \001(\005\"F\n\016A"
  "ddItemRequest\022\017\n\007user_id\030\001 \001(\t\022#\n\004item\030\002"
  " \001(\0132\025.hipstershop.CartItem\"#\n\020EmptyCart"
  "Request\022\017\n\007user_id\030\001 \001(\t\"!\n\016GetCartReque"
  "st\022\017\n\007user_id\030\001 \001(\t\"=\n\004Cart\022\017\n\007user_id\030\001"
  " \001(\t\022$\n\005items\030\002 \003(\0132\025.hipstershop.CartIt"
  "em\"\007\n\005Empty\"B\n\032ListRecommendationsReques"
  "t\022\017\n\007user_id\030\001 \001(\t\022\023\n\013product_ids\030\002 \003(\t\""
  "2\n\033ListRecommendationsResponse\022\023\n\013produc"
  "t_ids\030\001 \003(\t\"\204\001\n\007Product\022\n\n\002id\030\001 \001(\t\022\014\n\004n"
  "ame\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\017\n\007pictur"
  "e\030\004 \001(\t\022%\n\tprice_usd\030\005 \001(\0132\022.hipstershop"
  ".Money\022\022\n\ncategories\030\006 \003(\t\">\n\024ListProduc"
  "tsResponse\022&\n\010products\030\001 \003(\0132\024.hipstersh"
  "op.Product\"\037\n\021GetProductRequest\022\n\n\002id\030\001 "
  "\001(\t\"&\n\025SearchProductsRequest\022\r\n\005query\030\001 "
  "\001(\t\"\?\n\026SearchProductsResponse\022%\n\007results"
  "\030\001 \003(\0132\024.hipstershop.Product\"^\n\017GetQuote"
  "Request\022%\n\007address\030\001 \001(\0132\024.hipstershop.A"
  "ddress\022$\n\005items\030\002 \003(\0132\025.hipstershop.Cart"
  "Item\"8\n\020GetQuoteResponse\022$\n\010cost_usd\030\001 \001"
  "(\0132\022.hipstershop.Money\"_\n\020ShipOrderReque"
  "st\022%\n\007address\030\001 \001(\0132\024.hipstershop.Addres"
  "s\022$\n\005items\030\002 \003(\0132\025.hipstershop.CartItem\""
  "(\n\021ShipOrderResponse\022\023\n\013tracking_id\030\001 \001("
  "\t\"a\n\007Address\022\026\n\016street_address\030\001 \001(\t\022\014\n\004"
  "city\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\017\n\007country\030\004 \001"
  "(\t\022\020\n\010zip_code\030\005 \001(\005\"<\n\005Money\022\025\n\rcurrenc"
  "y_code\030\001 \001(\t\022\r\n\005units\030\002 \001(\003\022\r\n\005nanos\030\003 \001"
  "(\005\"8\n\036GetSupportedCurrenciesResponse\022\026\n\016"
  "currency_codes\030\001 \003(\t\"N\n\031CurrencyConversi"
  "onRequest\022 \n\004from\030\001 \001(\0132\022.hipstershop.Mo"
  "ney\022\017\n\007to_code\030\002 \001(\t\"\220\001\n\016CreditCardInfo\022"
  "\032\n\022credit_card_number\030\001 \001(\t\022\027\n\017credit_ca"
  "rd_cvv\030\002 \001(\005\022#\n\033credit_card_expiration_y"
  "ear\030\003 \001(\005\022$\n\034credit_card_expiration_mont"
  "h\030\004 \001(\005\"e\n\rChargeRequest\022\"\n\006amount\030\001 \001(\013"
  "2\022.hipstershop.Money\0220\n\013credit_card\030\002 \001("
  "\0132\033.hipstershop.CreditCardInfo\"(\n\016Charge"
  "Response\022\026\n\016transaction_id\030\001 \001(\t\"R\n\tOrde"
  "rItem\022#\n\004item\030\001 \001(\0132\025.hipstershop.CartIt"
  "em\022 \n\004cost\030\002 \001(\0132\022.hipstershop.Money\"\277\001\n"
  "\013OrderResult\022\020\n\010order_id\030\001 \001(\t\022\034\n\024shippi"
  "ng_tracking_id\030\002 \001(\t\022)\n\rshipping_cost\030\003 "
  "\001(\0132\022.hipstershop.Money\022.\n\020shipping_addr"
  "ess\030\004 \001(\0132\024.hipstershop.Address\022%\n\005items"
  "\030\005 \003(\0132\026.hipstershop.OrderItem\"V\n\034SendOr"
  "derConfirmationRequest\022\r\n\005email\030\001 \001(\t\022\'\n"
  "\005order\030\002 \001(\0132\030.hipstershop.OrderResult\"\270"
  "\001\n\021PlaceOrderRequest\022\017\n\007user_id\030\001 \001(\t\022\025\n"
  "\ruser_currency\030\002 \001(\t\022%\n\007address\030\003 \001(\0132\024."
  "hipstershop.Address\022\r\n\005email\030\005 \001(\t\0220\n\013cr"
  "edit_card\030\006 \001(\0132\033.hipstershop.CreditCard"
  "Info:\023R\021email;credit_card\"=\n\022PlaceOrderR"
  "esponse\022\'\n\005order\030\001 \001(\0132\030.hipstershop.Ord"
  "erResult\"!\n\tAdRequest\022\024\n\014context_keys\030\001 "
  "\003(\t\"*\n\nAdResponse\022\034\n\003ads\030\001 \003(\0132\017.hipster"
  "shop.Ad\"(\n\002Ad\022\024\n\014redirect_url\030\001 \001(\t\022\014\n\004t"
  "ext\030\002 \001(\t2\312\001\n\013CartService\022<\n\007AddItem\022\033.h"
  "ipstershop.AddItemRequest\032\022.hipstershop."
  "Empty\"\000\022;\n\007GetCart\022\033.hipstershop.GetCart"
  "Request\032\021.hipstershop.Cart\"\000\022@\n\tEmptyCar"
  "t\022\035.hipstershop.EmptyCartRequest\032\022.hipst"
  "ershop.Empty\"\0002\203\001\n\025RecommendationService"
  "\022j\n\023ListRecommendations\022\'.hipstershop.Li"
  "stRecommendationsRequest\032(.hipstershop.L"
  "istRecommendationsResponse\"\0002\203\002\n\025Product"
  "CatalogService\022G\n\014ListProducts\022\022.hipster"
  "shop.Empty\032!.hipstershop.ListProductsRes"
  "ponse\"\000\022D\n\nGetProduct\022\036.hipstershop.GetP"
  "roductRequest\032\024.hipstershop.Product\"\000\022[\n"
  "\016SearchProducts\022\".hipstershop.SearchProd"
  "uctsRequest\032#.hipstershop.SearchProducts"
  "Response\"\0002\252\001\n\017ShippingService\022I\n\010GetQuo"
  "te\022\034.hipstershop.GetQuoteRequest\032\035.hipst"
  "ershop.GetQuoteResponse\"\000\022L\n\tShipOrder\022\035"
  ".hipstershop.ShipOrderRequest\032\036.hipsters"
  "hop.ShipOrderResponse\"\0002\267\001\n\017CurrencyServ"
  "ice\022[\n\026GetSupportedCurrencies\022\022.hipsters"
  "hop.Empty\032+.hipstershop.GetSupportedCurr"
  "enciesResponse\"\000\022G\n\007Convert\022&.hipstersho"
  "p.CurrencyConversionRequest\032\022.hipstersho"
  "p.Money\"\0002U\n\016PaymentService\022C\n\006Charge\022\032."
  "hipstershop.ChargeRequest\032\033.hipstershop."
  "ChargeResponse\"\0002h\n\014EmailService\022X\n\025Send"
  "OrderConfirmation\022).hipstershop.SendOrde"
  "rConfirmationRequest\032\022.hipstershop.Empty"
  "\"\0002b\n\017CheckoutService\022O\n\nPlaceOrder\022\036.hi"
  "pstershop.PlaceOrderRequest\032\037.hipstersho"
  "p.PlaceOrderResponse\"\0002H\n\tAdService\022;\n\006G"
  "etAds\022\026.hipstershop.AdRequest\032\027.hipsters"
  "hop.AdResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_demo_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_demo_2eproto_sccs[32] = {
  &scc_info_Ad_demo_2eproto.base,
  &scc_info_AdRequest_demo_2eproto.base,
  &scc_info_AdResponse_demo_2eproto.base,
  &scc_info_AddItemRequest_demo_2eproto.base,
  &scc_info_Address_demo_2eproto.base,
  &scc_info_Cart_demo_2eproto.base,
  &scc_info_CartItem_demo_2eproto.base,
  &scc_info_ChargeRequest_demo_2eproto.base,
  &scc_info_ChargeResponse_demo_2eproto.base,
  &scc_info_CreditCardInfo_demo_2eproto.base,
  &scc_info_CurrencyConversionRequest_demo_2eproto.base,
  &scc_info_Empty_demo_2eproto.base,
  &scc_info_EmptyCartRequest_demo_2eproto.base,
  &scc_info_GetCartRequest_demo_2eproto.base,
  &scc_info_GetProductRequest_demo_2eproto.base,
  &scc_info_GetQuoteRequest_demo_2eproto.base,
  &scc_info_GetQuoteResponse_demo_2eproto.base,
  &scc_info_GetSupportedCurrenciesResponse_demo_2eproto.base,
  &scc_info_ListProductsResponse_demo_2eproto.base,
  &scc_info_ListRecommendationsRequest_demo_2eproto.base,
  &scc_info_ListRecommendationsResponse_demo_2eproto.base,
  &scc_info_Money_demo_2eproto.base,
  &scc_info_OrderItem_demo_2eproto.base,
  &scc_info_OrderResult_demo_2eproto.base,
  &scc_info_PlaceOrderRequest_demo_2eproto.base,
  &scc_info_PlaceOrderResponse_demo_2eproto.base,
  &scc_info_Product_demo_2eproto.base,
  &scc_info_SearchProductsRequest_demo_2eproto.base,
  &scc_info_SearchProductsResponse_demo_2eproto.base,
  &scc_info_SendOrderConfirmationRequest_demo_2eproto.base,
  &scc_info_ShipOrderRequest_demo_2eproto.base,
  &scc_info_ShipOrderResponse_demo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_demo_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_demo_2eproto = {
  false, false, descriptor_table_protodef_demo_2eproto, "demo.proto", 3704,
  &descriptor_table_demo_2eproto_once, descriptor_table_demo_2eproto_sccs, descriptor_table_demo_2eproto_deps, 32, 0,
  schemas, file_default_instances, TableStruct_demo_2eproto::offsets,
  file_level_metadata_demo_2eproto, 32, file_level_enum_descriptors_demo_2eproto, file_level_service_descriptors_demo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_demo_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_demo_2eproto)), true);
namespace hipstershop {

// ===================================================================

class CartItem::_Internal {
 public:
};

CartItem::CartItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.CartItem)
}
CartItem::CartItem(const CartItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_product_id().empty()) {
    product_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_product_id(),
      GetArena());
  }
  quantity_ = from.quantity_;
  // @@protoc_insertion_point(copy_constructor:hipstershop.CartItem)
}

void CartItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CartItem_demo_2eproto.base);
  product_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

CartItem::~CartItem() {
  // @@protoc_insertion_point(destructor:hipstershop.CartItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CartItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  product_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CartItem::ArenaDtor(void* object) {
  CartItem* _this = reinterpret_cast< CartItem* >(object);
  (void)_this;
}
void CartItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CartItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CartItem& CartItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CartItem_demo_2eproto.base);
  return *internal_default_instance();
}


void CartItem::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.CartItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  quantity_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CartItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string product_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_product_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.CartItem.product_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 quantity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CartItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.CartItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_product_id().data(), static_cast<int>(this->_internal_product_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.CartItem.product_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_product_id(), target);
  }

  // int32 quantity = 2;
  if (this->quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.CartItem)
  return target;
}

size_t CartItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.CartItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_product_id());
  }

  // int32 quantity = 2;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_quantity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.CartItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CartItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CartItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.CartItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.CartItem)
    MergeFrom(*source);
  }
}

void CartItem::MergeFrom(const CartItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.CartItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {
    _internal_set_product_id(from._internal_product_id());
  }
  if (from.quantity() != 0) {
    _internal_set_quantity(from._internal_quantity());
  }
}

void CartItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.CartItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartItem::CopyFrom(const CartItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.CartItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartItem::IsInitialized() const {
  return true;
}

void CartItem::InternalSwap(CartItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  product_id_.Swap(&other->product_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(quantity_, other->quantity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CartItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddItemRequest::_Internal {
 public:
  static const ::hipstershop::CartItem& item(const AddItemRequest* msg);
};

const ::hipstershop::CartItem&
AddItemRequest::_Internal::item(const AddItemRequest* msg) {
  return *msg->item_;
}
AddItemRequest::AddItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.AddItemRequest)
}
AddItemRequest::AddItemRequest(const AddItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  if (from._internal_has_item()) {
    item_ = new ::hipstershop::CartItem(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.AddItemRequest)
}

void AddItemRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddItemRequest_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_ = nullptr;
}

AddItemRequest::~AddItemRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.AddItemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void AddItemRequest::ArenaDtor(void* object) {
  AddItemRequest* _this = reinterpret_cast< AddItemRequest* >(object);
  (void)_this;
}
void AddItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddItemRequest& AddItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddItemRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void AddItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.AddItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.AddItemRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.CartItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.AddItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.AddItemRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // .hipstershop.CartItem item = 2;
  if (this->has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.AddItemRequest)
  return target;
}

size_t AddItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.AddItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .hipstershop.CartItem item = 2;
  if (this->has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.AddItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.AddItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.AddItemRequest)
    MergeFrom(*source);
  }
}

void AddItemRequest::MergeFrom(const AddItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.AddItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from.has_item()) {
    _internal_mutable_item()->::hipstershop::CartItem::MergeFrom(from._internal_item());
  }
}

void AddItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.AddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddItemRequest::CopyFrom(const AddItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.AddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddItemRequest::IsInitialized() const {
  return true;
}

void AddItemRequest::InternalSwap(AddItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmptyCartRequest::_Internal {
 public:
};

EmptyCartRequest::EmptyCartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.EmptyCartRequest)
}
EmptyCartRequest::EmptyCartRequest(const EmptyCartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.EmptyCartRequest)
}

void EmptyCartRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmptyCartRequest_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EmptyCartRequest::~EmptyCartRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.EmptyCartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmptyCartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmptyCartRequest::ArenaDtor(void* object) {
  EmptyCartRequest* _this = reinterpret_cast< EmptyCartRequest* >(object);
  (void)_this;
}
void EmptyCartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmptyCartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyCartRequest& EmptyCartRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmptyCartRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void EmptyCartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.EmptyCartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmptyCartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.EmptyCartRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmptyCartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.EmptyCartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.EmptyCartRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.EmptyCartRequest)
  return target;
}

size_t EmptyCartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.EmptyCartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyCartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.EmptyCartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyCartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmptyCartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.EmptyCartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.EmptyCartRequest)
    MergeFrom(*source);
  }
}

void EmptyCartRequest::MergeFrom(const EmptyCartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.EmptyCartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
}

void EmptyCartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.EmptyCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyCartRequest::CopyFrom(const EmptyCartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.EmptyCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyCartRequest::IsInitialized() const {
  return true;
}

void EmptyCartRequest::InternalSwap(EmptyCartRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EmptyCartRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCartRequest::_Internal {
 public:
};

GetCartRequest::GetCartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.GetCartRequest)
}
GetCartRequest::GetCartRequest(const GetCartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.GetCartRequest)
}

void GetCartRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCartRequest_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCartRequest::~GetCartRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.GetCartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCartRequest::ArenaDtor(void* object) {
  GetCartRequest* _this = reinterpret_cast< GetCartRequest* >(object);
  (void)_this;
}
void GetCartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCartRequest& GetCartRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCartRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void GetCartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.GetCartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.GetCartRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.GetCartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.GetCartRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.GetCartRequest)
  return target;
}

size_t GetCartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.GetCartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.GetCartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.GetCartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.GetCartRequest)
    MergeFrom(*source);
  }
}

void GetCartRequest::MergeFrom(const GetCartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.GetCartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
}

void GetCartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.GetCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCartRequest::CopyFrom(const GetCartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.GetCartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCartRequest::IsInitialized() const {
  return true;
}

void GetCartRequest::InternalSwap(GetCartRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCartRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cart::_Internal {
 public:
};

Cart::Cart(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Cart)
}
Cart::Cart(const Cart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.Cart)
}

void Cart::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cart_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Cart::~Cart() {
  // @@protoc_insertion_point(destructor:hipstershop.Cart)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cart::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cart::ArenaDtor(void* object) {
  Cart* _this = reinterpret_cast< Cart* >(object);
  (void)_this;
}
void Cart::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cart& Cart::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cart_demo_2eproto.base);
  return *internal_default_instance();
}


void Cart::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Cart)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cart::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Cart.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hipstershop.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cart::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Cart)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Cart.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated .hipstershop.CartItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Cart)
  return target;
}

size_t Cart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Cart)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cart::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Cart)
  GOOGLE_DCHECK_NE(&from, this);
  const Cart* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cart>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Cart)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Cart)
    MergeFrom(*source);
  }
}

void Cart::MergeFrom(const Cart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Cart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
}

void Cart::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Cart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cart::CopyFrom(const Cart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Cart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cart::IsInitialized() const {
  return true;
}

void Cart::InternalSwap(Cart* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Cart::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:hipstershop.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_demo_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListRecommendationsRequest::_Internal {
 public:
};

ListRecommendationsRequest::ListRecommendationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  product_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ListRecommendationsRequest)
}
ListRecommendationsRequest::ListRecommendationsRequest(const ListRecommendationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      product_ids_(from.product_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.ListRecommendationsRequest)
}

void ListRecommendationsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListRecommendationsRequest_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListRecommendationsRequest::~ListRecommendationsRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.ListRecommendationsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListRecommendationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRecommendationsRequest::ArenaDtor(void* object) {
  ListRecommendationsRequest* _this = reinterpret_cast< ListRecommendationsRequest* >(object);
  (void)_this;
}
void ListRecommendationsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRecommendationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListRecommendationsRequest& ListRecommendationsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListRecommendationsRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void ListRecommendationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ListRecommendationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_ids_.Clear();
  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRecommendationsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.ListRecommendationsRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string product_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_product_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.ListRecommendationsRequest.product_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListRecommendationsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ListRecommendationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.ListRecommendationsRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated string product_ids = 2;
  for (int i = 0, n = this->_internal_product_ids_size(); i < n; i++) {
    const auto& s = this->_internal_product_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.ListRecommendationsRequest.product_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ListRecommendationsRequest)
  return target;
}

size_t ListRecommendationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ListRecommendationsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string product_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(product_ids_.size());
  for (int i = 0, n = product_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      product_ids_.Get(i));
  }

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRecommendationsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ListRecommendationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRecommendationsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListRecommendationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ListRecommendationsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ListRecommendationsRequest)
    MergeFrom(*source);
  }
}

void ListRecommendationsRequest::MergeFrom(const ListRecommendationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ListRecommendationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_ids_.MergeFrom(from.product_ids_);
  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
}

void ListRecommendationsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ListRecommendationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRecommendationsRequest::CopyFrom(const ListRecommendationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ListRecommendationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRecommendationsRequest::IsInitialized() const {
  return true;
}

void ListRecommendationsRequest::InternalSwap(ListRecommendationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  product_ids_.InternalSwap(&other->product_ids_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRecommendationsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListRecommendationsResponse::_Internal {
 public:
};

ListRecommendationsResponse::ListRecommendationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  product_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ListRecommendationsResponse)
}
ListRecommendationsResponse::ListRecommendationsResponse(const ListRecommendationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      product_ids_(from.product_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.ListRecommendationsResponse)
}

void ListRecommendationsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListRecommendationsResponse_demo_2eproto.base);
}

ListRecommendationsResponse::~ListRecommendationsResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.ListRecommendationsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListRecommendationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListRecommendationsResponse::ArenaDtor(void* object) {
  ListRecommendationsResponse* _this = reinterpret_cast< ListRecommendationsResponse* >(object);
  (void)_this;
}
void ListRecommendationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRecommendationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListRecommendationsResponse& ListRecommendationsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListRecommendationsResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void ListRecommendationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ListRecommendationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRecommendationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string product_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_product_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.ListRecommendationsResponse.product_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListRecommendationsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ListRecommendationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string product_ids = 1;
  for (int i = 0, n = this->_internal_product_ids_size(); i < n; i++) {
    const auto& s = this->_internal_product_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.ListRecommendationsResponse.product_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ListRecommendationsResponse)
  return target;
}

size_t ListRecommendationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ListRecommendationsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string product_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(product_ids_.size());
  for (int i = 0, n = product_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      product_ids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRecommendationsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ListRecommendationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRecommendationsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListRecommendationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ListRecommendationsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ListRecommendationsResponse)
    MergeFrom(*source);
  }
}

void ListRecommendationsResponse::MergeFrom(const ListRecommendationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ListRecommendationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_ids_.MergeFrom(from.product_ids_);
}

void ListRecommendationsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ListRecommendationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRecommendationsResponse::CopyFrom(const ListRecommendationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ListRecommendationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRecommendationsResponse::IsInitialized() const {
  return true;
}

void ListRecommendationsResponse::InternalSwap(ListRecommendationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  product_ids_.InternalSwap(&other->product_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRecommendationsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Product::_Internal {
 public:
  static const ::hipstershop::Money& price_usd(const Product* msg);
};

const ::hipstershop::Money&
Product::_Internal::price_usd(const Product* msg) {
  return *msg->price_usd_;
}
Product::Product(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  categories_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Product)
}
Product::Product(const Product& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      categories_(from.categories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_picture().empty()) {
    picture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_picture(),
      GetArena());
  }
  if (from._internal_has_price_usd()) {
    price_usd_ = new ::hipstershop::Money(*from.price_usd_);
  } else {
    price_usd_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.Product)
}

void Product::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Product_demo_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  price_usd_ = nullptr;
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:hipstershop.Product)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Product::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete price_usd_;
}

void Product::ArenaDtor(void* object) {
  Product* _this = reinterpret_cast< Product* >(object);
  (void)_this;
}
void Product::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Product& Product::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Product_demo_2eproto.base);
  return *internal_default_instance();
}


void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Product)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  categories_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  picture_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && price_usd_ != nullptr) {
    delete price_usd_;
  }
  price_usd_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Product::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Product.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Product.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Product.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string picture = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_picture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Product.picture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.Money price_usd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_price_usd(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string categories = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_categories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Product.categories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Product::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Product)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Product.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Product.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Product.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string picture = 4;
  if (this->picture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_picture().data(), static_cast<int>(this->_internal_picture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Product.picture");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_picture(), target);
  }

  // .hipstershop.Money price_usd = 5;
  if (this->has_price_usd()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::price_usd(this), target, stream);
  }

  // repeated string categories = 6;
  for (int i = 0, n = this->_internal_categories_size(); i < n; i++) {
    const auto& s = this->_internal_categories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Product.categories");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Product)
  return target;
}

size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Product)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string categories = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(categories_.size());
  for (int i = 0, n = categories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      categories_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string picture = 4;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_picture());
  }

  // .hipstershop.Money price_usd = 5;
  if (this->has_price_usd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *price_usd_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Product::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Product>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Product)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  categories_.MergeFrom(from.categories_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.picture().size() > 0) {
    _internal_set_picture(from._internal_picture());
  }
  if (from.has_price_usd()) {
    _internal_mutable_price_usd()->::hipstershop::Money::MergeFrom(from._internal_price_usd());
  }
}

void Product::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  return true;
}

void Product::InternalSwap(Product* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  categories_.InternalSwap(&other->categories_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  picture_.Swap(&other->picture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(price_usd_, other->price_usd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Product::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListProductsResponse::_Internal {
 public:
};

ListProductsResponse::ListProductsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  products_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ListProductsResponse)
}
ListProductsResponse::ListProductsResponse(const ListProductsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      products_(from.products_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.ListProductsResponse)
}

void ListProductsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListProductsResponse_demo_2eproto.base);
}

ListProductsResponse::~ListProductsResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.ListProductsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListProductsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListProductsResponse::ArenaDtor(void* object) {
  ListProductsResponse* _this = reinterpret_cast< ListProductsResponse* >(object);
  (void)_this;
}
void ListProductsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProductsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListProductsResponse& ListProductsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListProductsResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void ListProductsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ListProductsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  products_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProductsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hipstershop.Product products = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_products(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProductsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ListProductsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hipstershop.Product products = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_products_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_products(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ListProductsResponse)
  return target;
}

size_t ListProductsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ListProductsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.Product products = 1;
  total_size += 1UL * this->_internal_products_size();
  for (const auto& msg : this->products_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListProductsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ListProductsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProductsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListProductsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ListProductsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ListProductsResponse)
    MergeFrom(*source);
  }
}

void ListProductsResponse::MergeFrom(const ListProductsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ListProductsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  products_.MergeFrom(from.products_);
}

void ListProductsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ListProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProductsResponse::CopyFrom(const ListProductsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ListProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProductsResponse::IsInitialized() const {
  return true;
}

void ListProductsResponse::InternalSwap(ListProductsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  products_.InternalSwap(&other->products_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProductsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetProductRequest::_Internal {
 public:
};

GetProductRequest::GetProductRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.GetProductRequest)
}
GetProductRequest::GetProductRequest(const GetProductRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.GetProductRequest)
}

void GetProductRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetProductRequest_demo_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetProductRequest::~GetProductRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.GetProductRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetProductRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetProductRequest::ArenaDtor(void* object) {
  GetProductRequest* _this = reinterpret_cast< GetProductRequest* >(object);
  (void)_this;
}
void GetProductRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProductRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetProductRequest& GetProductRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetProductRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void GetProductRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.GetProductRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProductRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.GetProductRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProductRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.GetProductRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.GetProductRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.GetProductRequest)
  return target;
}

size_t GetProductRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.GetProductRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetProductRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.GetProductRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProductRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetProductRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.GetProductRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.GetProductRequest)
    MergeFrom(*source);
  }
}

void GetProductRequest::MergeFrom(const GetProductRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.GetProductRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetProductRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.GetProductRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProductRequest::CopyFrom(const GetProductRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.GetProductRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductRequest::IsInitialized() const {
  return true;
}

void GetProductRequest::InternalSwap(GetProductRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProductRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SearchProductsRequest::_Internal {
 public:
};

SearchProductsRequest::SearchProductsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.SearchProductsRequest)
}
SearchProductsRequest::SearchProductsRequest(const SearchProductsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.SearchProductsRequest)
}

void SearchProductsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchProductsRequest_demo_2eproto.base);
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SearchProductsRequest::~SearchProductsRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.SearchProductsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SearchProductsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchProductsRequest::ArenaDtor(void* object) {
  SearchProductsRequest* _this = reinterpret_cast< SearchProductsRequest* >(object);
  (void)_this;
}
void SearchProductsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchProductsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchProductsRequest& SearchProductsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchProductsRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void SearchProductsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.SearchProductsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchProductsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string query = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.SearchProductsRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchProductsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.SearchProductsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.SearchProductsRequest.query");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.SearchProductsRequest)
  return target;
}

size_t SearchProductsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.SearchProductsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchProductsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.SearchProductsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchProductsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchProductsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.SearchProductsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.SearchProductsRequest)
    MergeFrom(*source);
  }
}

void SearchProductsRequest::MergeFrom(const SearchProductsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.SearchProductsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void SearchProductsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.SearchProductsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchProductsRequest::CopyFrom(const SearchProductsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.SearchProductsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchProductsRequest::IsInitialized() const {
  return true;
}

void SearchProductsRequest::InternalSwap(SearchProductsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchProductsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SearchProductsResponse::_Internal {
 public:
};

SearchProductsResponse::SearchProductsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.SearchProductsResponse)
}
SearchProductsResponse::SearchProductsResponse(const SearchProductsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.SearchProductsResponse)
}

void SearchProductsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchProductsResponse_demo_2eproto.base);
}

SearchProductsResponse::~SearchProductsResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.SearchProductsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SearchProductsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SearchProductsResponse::ArenaDtor(void* object) {
  SearchProductsResponse* _this = reinterpret_cast< SearchProductsResponse* >(object);
  (void)_this;
}
void SearchProductsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchProductsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchProductsResponse& SearchProductsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchProductsResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void SearchProductsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.SearchProductsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchProductsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hipstershop.Product results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchProductsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.SearchProductsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hipstershop.Product results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.SearchProductsResponse)
  return target;
}

size_t SearchProductsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.SearchProductsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.Product results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchProductsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.SearchProductsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchProductsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchProductsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.SearchProductsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.SearchProductsResponse)
    MergeFrom(*source);
  }
}

void SearchProductsResponse::MergeFrom(const SearchProductsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.SearchProductsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void SearchProductsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.SearchProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchProductsResponse::CopyFrom(const SearchProductsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.SearchProductsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchProductsResponse::IsInitialized() const {
  return true;
}

void SearchProductsResponse::InternalSwap(SearchProductsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchProductsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetQuoteRequest::_Internal {
 public:
  static const ::hipstershop::Address& address(const GetQuoteRequest* msg);
};

const ::hipstershop::Address&
GetQuoteRequest::_Internal::address(const GetQuoteRequest* msg) {
  return *msg->address_;
}
GetQuoteRequest::GetQuoteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.GetQuoteRequest)
}
GetQuoteRequest::GetQuoteRequest(const GetQuoteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_address()) {
    address_ = new ::hipstershop::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.GetQuoteRequest)
}

void GetQuoteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetQuoteRequest_demo_2eproto.base);
  address_ = nullptr;
}

GetQuoteRequest::~GetQuoteRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.GetQuoteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetQuoteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete address_;
}

void GetQuoteRequest::ArenaDtor(void* object) {
  GetQuoteRequest* _this = reinterpret_cast< GetQuoteRequest* >(object);
  (void)_this;
}
void GetQuoteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetQuoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetQuoteRequest& GetQuoteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetQuoteRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void GetQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.GetQuoteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQuoteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.Address address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hipstershop.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetQuoteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.GetQuoteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.Address address = 1;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::address(this), target, stream);
  }

  // repeated .hipstershop.CartItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.GetQuoteRequest)
  return target;
}

size_t GetQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.GetQuoteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .hipstershop.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetQuoteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuoteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetQuoteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.GetQuoteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.GetQuoteRequest)
    MergeFrom(*source);
  }
}

void GetQuoteRequest::MergeFrom(const GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_address()) {
    _internal_mutable_address()->::hipstershop::Address::MergeFrom(from._internal_address());
  }
}

void GetQuoteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuoteRequest::CopyFrom(const GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuoteRequest::IsInitialized() const {
  return true;
}

void GetQuoteRequest::InternalSwap(GetQuoteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQuoteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetQuoteResponse::_Internal {
 public:
  static const ::hipstershop::Money& cost_usd(const GetQuoteResponse* msg);
};

const ::hipstershop::Money&
GetQuoteResponse::_Internal::cost_usd(const GetQuoteResponse* msg) {
  return *msg->cost_usd_;
}
GetQuoteResponse::GetQuoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.GetQuoteResponse)
}
GetQuoteResponse::GetQuoteResponse(const GetQuoteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cost_usd()) {
    cost_usd_ = new ::hipstershop::Money(*from.cost_usd_);
  } else {
    cost_usd_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.GetQuoteResponse)
}

void GetQuoteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetQuoteResponse_demo_2eproto.base);
  cost_usd_ = nullptr;
}

GetQuoteResponse::~GetQuoteResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.GetQuoteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetQuoteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete cost_usd_;
}

void GetQuoteResponse::ArenaDtor(void* object) {
  GetQuoteResponse* _this = reinterpret_cast< GetQuoteResponse* >(object);
  (void)_this;
}
void GetQuoteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetQuoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetQuoteResponse& GetQuoteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetQuoteResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void GetQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.GetQuoteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && cost_usd_ != nullptr) {
    delete cost_usd_;
  }
  cost_usd_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQuoteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.Money cost_usd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cost_usd(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetQuoteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.GetQuoteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.Money cost_usd = 1;
  if (this->has_cost_usd()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::cost_usd(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.GetQuoteResponse)
  return target;
}

size_t GetQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.GetQuoteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hipstershop.Money cost_usd = 1;
  if (this->has_cost_usd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cost_usd_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetQuoteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuoteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetQuoteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.GetQuoteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.GetQuoteResponse)
    MergeFrom(*source);
  }
}

void GetQuoteResponse::MergeFrom(const GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cost_usd()) {
    _internal_mutable_cost_usd()->::hipstershop::Money::MergeFrom(from._internal_cost_usd());
  }
}

void GetQuoteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuoteResponse::CopyFrom(const GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuoteResponse::IsInitialized() const {
  return true;
}

void GetQuoteResponse::InternalSwap(GetQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(cost_usd_, other->cost_usd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQuoteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ShipOrderRequest::_Internal {
 public:
  static const ::hipstershop::Address& address(const ShipOrderRequest* msg);
};

const ::hipstershop::Address&
ShipOrderRequest::_Internal::address(const ShipOrderRequest* msg) {
  return *msg->address_;
}
ShipOrderRequest::ShipOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ShipOrderRequest)
}
ShipOrderRequest::ShipOrderRequest(const ShipOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_address()) {
    address_ = new ::hipstershop::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.ShipOrderRequest)
}

void ShipOrderRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShipOrderRequest_demo_2eproto.base);
  address_ = nullptr;
}

ShipOrderRequest::~ShipOrderRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.ShipOrderRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShipOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete address_;
}

void ShipOrderRequest::ArenaDtor(void* object) {
  ShipOrderRequest* _this = reinterpret_cast< ShipOrderRequest* >(object);
  (void)_this;
}
void ShipOrderRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShipOrderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShipOrderRequest& ShipOrderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShipOrderRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void ShipOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ShipOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShipOrderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.Address address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hipstershop.CartItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShipOrderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ShipOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.Address address = 1;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::address(this), target, stream);
  }

  // repeated .hipstershop.CartItem items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ShipOrderRequest)
  return target;
}

size_t ShipOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ShipOrderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.CartItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .hipstershop.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipOrderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ShipOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipOrderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShipOrderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ShipOrderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ShipOrderRequest)
    MergeFrom(*source);
  }
}

void ShipOrderRequest::MergeFrom(const ShipOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ShipOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_address()) {
    _internal_mutable_address()->::hipstershop::Address::MergeFrom(from._internal_address());
  }
}

void ShipOrderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ShipOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipOrderRequest::CopyFrom(const ShipOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ShipOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipOrderRequest::IsInitialized() const {
  return true;
}

void ShipOrderRequest::InternalSwap(ShipOrderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShipOrderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ShipOrderResponse::_Internal {
 public:
};

ShipOrderResponse::ShipOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ShipOrderResponse)
}
ShipOrderResponse::ShipOrderResponse(const ShipOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tracking_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tracking_id().empty()) {
    tracking_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tracking_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.ShipOrderResponse)
}

void ShipOrderResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShipOrderResponse_demo_2eproto.base);
  tracking_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShipOrderResponse::~ShipOrderResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.ShipOrderResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShipOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tracking_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShipOrderResponse::ArenaDtor(void* object) {
  ShipOrderResponse* _this = reinterpret_cast< ShipOrderResponse* >(object);
  (void)_this;
}
void ShipOrderResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShipOrderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShipOrderResponse& ShipOrderResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShipOrderResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void ShipOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ShipOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tracking_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShipOrderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tracking_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tracking_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.ShipOrderResponse.tracking_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShipOrderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ShipOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tracking_id = 1;
  if (this->tracking_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tracking_id().data(), static_cast<int>(this->_internal_tracking_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.ShipOrderResponse.tracking_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tracking_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ShipOrderResponse)
  return target;
}

size_t ShipOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ShipOrderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tracking_id = 1;
  if (this->tracking_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tracking_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipOrderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ShipOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipOrderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShipOrderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ShipOrderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ShipOrderResponse)
    MergeFrom(*source);
  }
}

void ShipOrderResponse::MergeFrom(const ShipOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ShipOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tracking_id().size() > 0) {
    _internal_set_tracking_id(from._internal_tracking_id());
  }
}

void ShipOrderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ShipOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipOrderResponse::CopyFrom(const ShipOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ShipOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipOrderResponse::IsInitialized() const {
  return true;
}

void ShipOrderResponse::InternalSwap(ShipOrderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tracking_id_.Swap(&other->tracking_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShipOrderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Address::_Internal {
 public:
};

Address::Address(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Address)
}
Address::Address(const Address& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  street_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_street_address().empty()) {
    street_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_street_address(),
      GetArena());
  }
  city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_city().empty()) {
    city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_city(),
      GetArena());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_state(),
      GetArena());
  }
  country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_country().empty()) {
    country_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_country(),
      GetArena());
  }
  zip_code_ = from.zip_code_;
  // @@protoc_insertion_point(copy_constructor:hipstershop.Address)
}

void Address::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Address_demo_2eproto.base);
  street_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  zip_code_ = 0;
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:hipstershop.Address)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Address::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  street_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Address::ArenaDtor(void* object) {
  Address* _this = reinterpret_cast< Address* >(object);
  (void)_this;
}
void Address::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Address& Address::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Address_demo_2eproto.base);
  return *internal_default_instance();
}


void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  street_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  city_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  country_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  zip_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Address::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string street_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_street_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Address.street_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string city = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_city();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Address.city"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Address.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string country = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_country();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Address.country"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 zip_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          zip_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Address::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string street_address = 1;
  if (this->street_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_street_address().data(), static_cast<int>(this->_internal_street_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Address.street_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_street_address(), target);
  }

  // string city = 2;
  if (this->city().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Address.city");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_city(), target);
  }

  // string state = 3;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Address.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string country = 4;
  if (this->country().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country().data(), static_cast<int>(this->_internal_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Address.country");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_country(), target);
  }

  // int32 zip_code = 5;
  if (this->zip_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_zip_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Address)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string street_address = 1;
  if (this->street_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_street_address());
  }

  // string city = 2;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_city());
  }

  // string state = 3;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string country = 4;
  if (this->country().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country());
  }

  // int32 zip_code = 5;
  if (this->zip_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_zip_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Address::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Address>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Address)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.street_address().size() > 0) {
    _internal_set_street_address(from._internal_street_address());
  }
  if (from.city().size() > 0) {
    _internal_set_city(from._internal_city());
  }
  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.country().size() > 0) {
    _internal_set_country(from._internal_country());
  }
  if (from.zip_code() != 0) {
    _internal_set_zip_code(from._internal_zip_code());
  }
}

void Address::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::InternalSwap(Address* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  street_address_.Swap(&other->street_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  city_.Swap(&other->city_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  country_.Swap(&other->country_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(zip_code_, other->zip_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Address::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Money::_Internal {
 public:
};

Money::Money(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Money)
}
Money::Money(const Money& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency_code().empty()) {
    currency_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_currency_code(),
      GetArena());
  }
  ::memcpy(&units_, &from.units_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&units_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:hipstershop.Money)
}

void Money::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Money_demo_2eproto.base);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&units_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&units_)) + sizeof(nanos_));
}

Money::~Money() {
  // @@protoc_insertion_point(destructor:hipstershop.Money)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Money::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currency_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Money::ArenaDtor(void* object) {
  Money* _this = reinterpret_cast< Money* >(object);
  (void)_this;
}
void Money::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Money::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Money& Money::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Money_demo_2eproto.base);
  return *internal_default_instance();
}


void Money::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Money)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&units_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&units_)) + sizeof(nanos_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Money::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string currency_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_currency_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Money.currency_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 units = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          units_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nanos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          nanos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Money::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Money)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency_code().data(), static_cast<int>(this->_internal_currency_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Money.currency_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currency_code(), target);
  }

  // int64 units = 2;
  if (this->units() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_units(), target);
  }

  // int32 nanos = 3;
  if (this->nanos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_nanos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Money)
  return target;
}

size_t Money::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Money)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency_code());
  }

  // int64 units = 2;
  if (this->units() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_units());
  }

  // int32 nanos = 3;
  if (this->nanos() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nanos());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Money::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Money)
  GOOGLE_DCHECK_NE(&from, this);
  const Money* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Money>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Money)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Money)
    MergeFrom(*source);
  }
}

void Money::MergeFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Money)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currency_code().size() > 0) {
    _internal_set_currency_code(from._internal_currency_code());
  }
  if (from.units() != 0) {
    _internal_set_units(from._internal_units());
  }
  if (from.nanos() != 0) {
    _internal_set_nanos(from._internal_nanos());
  }
}

void Money::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Money::CopyFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Money::IsInitialized() const {
  return true;
}

void Money::InternalSwap(Money* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currency_code_.Swap(&other->currency_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Money, nanos_)
      + sizeof(Money::nanos_)
      - PROTOBUF_FIELD_OFFSET(Money, units_)>(
          reinterpret_cast<char*>(&units_),
          reinterpret_cast<char*>(&other->units_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Money::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSupportedCurrenciesResponse::_Internal {
 public:
};

GetSupportedCurrenciesResponse::GetSupportedCurrenciesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  currency_codes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.GetSupportedCurrenciesResponse)
}
GetSupportedCurrenciesResponse::GetSupportedCurrenciesResponse(const GetSupportedCurrenciesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      currency_codes_(from.currency_codes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.GetSupportedCurrenciesResponse)
}

void GetSupportedCurrenciesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedCurrenciesResponse_demo_2eproto.base);
}

GetSupportedCurrenciesResponse::~GetSupportedCurrenciesResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.GetSupportedCurrenciesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedCurrenciesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSupportedCurrenciesResponse::ArenaDtor(void* object) {
  GetSupportedCurrenciesResponse* _this = reinterpret_cast< GetSupportedCurrenciesResponse* >(object);
  (void)_this;
}
void GetSupportedCurrenciesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedCurrenciesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedCurrenciesResponse& GetSupportedCurrenciesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedCurrenciesResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedCurrenciesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.GetSupportedCurrenciesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_codes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedCurrenciesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string currency_codes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_currency_codes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.GetSupportedCurrenciesResponse.currency_codes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedCurrenciesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.GetSupportedCurrenciesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string currency_codes = 1;
  for (int i = 0, n = this->_internal_currency_codes_size(); i < n; i++) {
    const auto& s = this->_internal_currency_codes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.GetSupportedCurrenciesResponse.currency_codes");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.GetSupportedCurrenciesResponse)
  return target;
}

size_t GetSupportedCurrenciesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.GetSupportedCurrenciesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string currency_codes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(currency_codes_.size());
  for (int i = 0, n = currency_codes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      currency_codes_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedCurrenciesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.GetSupportedCurrenciesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedCurrenciesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedCurrenciesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.GetSupportedCurrenciesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.GetSupportedCurrenciesResponse)
    MergeFrom(*source);
  }
}

void GetSupportedCurrenciesResponse::MergeFrom(const GetSupportedCurrenciesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.GetSupportedCurrenciesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  currency_codes_.MergeFrom(from.currency_codes_);
}

void GetSupportedCurrenciesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.GetSupportedCurrenciesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedCurrenciesResponse::CopyFrom(const GetSupportedCurrenciesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.GetSupportedCurrenciesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedCurrenciesResponse::IsInitialized() const {
  return true;
}

void GetSupportedCurrenciesResponse::InternalSwap(GetSupportedCurrenciesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currency_codes_.InternalSwap(&other->currency_codes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedCurrenciesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CurrencyConversionRequest::_Internal {
 public:
  static const ::hipstershop::Money& from(const CurrencyConversionRequest* msg);
};

const ::hipstershop::Money&
CurrencyConversionRequest::_Internal::from(const CurrencyConversionRequest* msg) {
  return *msg->from_;
}
CurrencyConversionRequest::CurrencyConversionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.CurrencyConversionRequest)
}
CurrencyConversionRequest::CurrencyConversionRequest(const CurrencyConversionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  to_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_to_code().empty()) {
    to_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_to_code(),
      GetArena());
  }
  if (from._internal_has_from()) {
    from_ = new ::hipstershop::Money(*from.from_);
  } else {
    from_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.CurrencyConversionRequest)
}

void CurrencyConversionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CurrencyConversionRequest_demo_2eproto.base);
  to_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  from_ = nullptr;
}

CurrencyConversionRequest::~CurrencyConversionRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.CurrencyConversionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CurrencyConversionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  to_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete from_;
}

void CurrencyConversionRequest::ArenaDtor(void* object) {
  CurrencyConversionRequest* _this = reinterpret_cast< CurrencyConversionRequest* >(object);
  (void)_this;
}
void CurrencyConversionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CurrencyConversionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CurrencyConversionRequest& CurrencyConversionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CurrencyConversionRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void CurrencyConversionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.CurrencyConversionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && from_ != nullptr) {
    delete from_;
  }
  from_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrencyConversionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.Money from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string to_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_to_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.CurrencyConversionRequest.to_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CurrencyConversionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.CurrencyConversionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.Money from = 1;
  if (this->has_from()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::from(this), target, stream);
  }

  // string to_code = 2;
  if (this->to_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_code().data(), static_cast<int>(this->_internal_to_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.CurrencyConversionRequest.to_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.CurrencyConversionRequest)
  return target;
}

size_t CurrencyConversionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.CurrencyConversionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string to_code = 2;
  if (this->to_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_code());
  }

  // .hipstershop.Money from = 1;
  if (this->has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *from_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CurrencyConversionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.CurrencyConversionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyConversionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CurrencyConversionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.CurrencyConversionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.CurrencyConversionRequest)
    MergeFrom(*source);
  }
}

void CurrencyConversionRequest::MergeFrom(const CurrencyConversionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.CurrencyConversionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to_code().size() > 0) {
    _internal_set_to_code(from._internal_to_code());
  }
  if (from.has_from()) {
    _internal_mutable_from()->::hipstershop::Money::MergeFrom(from._internal_from());
  }
}

void CurrencyConversionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.CurrencyConversionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyConversionRequest::CopyFrom(const CurrencyConversionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.CurrencyConversionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyConversionRequest::IsInitialized() const {
  return true;
}

void CurrencyConversionRequest::InternalSwap(CurrencyConversionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  to_code_.Swap(&other->to_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(from_, other->from_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrencyConversionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreditCardInfo::_Internal {
 public:
};

CreditCardInfo::CreditCardInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.CreditCardInfo)
}
CreditCardInfo::CreditCardInfo(const CreditCardInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credit_card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_credit_card_number().empty()) {
    credit_card_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_credit_card_number(),
      GetArena());
  }
  ::memcpy(&credit_card_cvv_, &from.credit_card_cvv_,
    static_cast<size_t>(reinterpret_cast<char*>(&credit_card_expiration_month_) -
    reinterpret_cast<char*>(&credit_card_cvv_)) + sizeof(credit_card_expiration_month_));
  // @@protoc_insertion_point(copy_constructor:hipstershop.CreditCardInfo)
}

void CreditCardInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditCardInfo_demo_2eproto.base);
  credit_card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&credit_card_cvv_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&credit_card_expiration_month_) -
      reinterpret_cast<char*>(&credit_card_cvv_)) + sizeof(credit_card_expiration_month_));
}

CreditCardInfo::~CreditCardInfo() {
  // @@protoc_insertion_point(destructor:hipstershop.CreditCardInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreditCardInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  credit_card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreditCardInfo::ArenaDtor(void* object) {
  CreditCardInfo* _this = reinterpret_cast< CreditCardInfo* >(object);
  (void)_this;
}
void CreditCardInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreditCardInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditCardInfo& CreditCardInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditCardInfo_demo_2eproto.base);
  return *internal_default_instance();
}


void CreditCardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.CreditCardInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  credit_card_number_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&credit_card_cvv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&credit_card_expiration_month_) -
      reinterpret_cast<char*>(&credit_card_cvv_)) + sizeof(credit_card_expiration_month_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreditCardInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string credit_card_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_credit_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.CreditCardInfo.credit_card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 credit_card_cvv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          credit_card_cvv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 credit_card_expiration_year = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          credit_card_expiration_year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 credit_card_expiration_month = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          credit_card_expiration_month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditCardInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.CreditCardInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string credit_card_number = 1;
  if (this->credit_card_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_credit_card_number().data(), static_cast<int>(this->_internal_credit_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.CreditCardInfo.credit_card_number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_credit_card_number(), target);
  }

  // int32 credit_card_cvv = 2;
  if (this->credit_card_cvv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_credit_card_cvv(), target);
  }

  // int32 credit_card_expiration_year = 3;
  if (this->credit_card_expiration_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_credit_card_expiration_year(), target);
  }

  // int32 credit_card_expiration_month = 4;
  if (this->credit_card_expiration_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_credit_card_expiration_month(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.CreditCardInfo)
  return target;
}

size_t CreditCardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.CreditCardInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string credit_card_number = 1;
  if (this->credit_card_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_credit_card_number());
  }

  // int32 credit_card_cvv = 2;
  if (this->credit_card_cvv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_credit_card_cvv());
  }

  // int32 credit_card_expiration_year = 3;
  if (this->credit_card_expiration_year() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_credit_card_expiration_year());
  }

  // int32 credit_card_expiration_month = 4;
  if (this->credit_card_expiration_month() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_credit_card_expiration_month());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditCardInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.CreditCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditCardInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditCardInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.CreditCardInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.CreditCardInfo)
    MergeFrom(*source);
  }
}

void CreditCardInfo::MergeFrom(const CreditCardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.CreditCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.credit_card_number().size() > 0) {
    _internal_set_credit_card_number(from._internal_credit_card_number());
  }
  if (from.credit_card_cvv() != 0) {
    _internal_set_credit_card_cvv(from._internal_credit_card_cvv());
  }
  if (from.credit_card_expiration_year() != 0) {
    _internal_set_credit_card_expiration_year(from._internal_credit_card_expiration_year());
  }
  if (from.credit_card_expiration_month() != 0) {
    _internal_set_credit_card_expiration_month(from._internal_credit_card_expiration_month());
  }
}

void CreditCardInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.CreditCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditCardInfo::CopyFrom(const CreditCardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.CreditCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditCardInfo::IsInitialized() const {
  return true;
}

void CreditCardInfo::InternalSwap(CreditCardInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  credit_card_number_.Swap(&other->credit_card_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreditCardInfo, credit_card_expiration_month_)
      + sizeof(CreditCardInfo::credit_card_expiration_month_)
      - PROTOBUF_FIELD_OFFSET(CreditCardInfo, credit_card_cvv_)>(
          reinterpret_cast<char*>(&credit_card_cvv_),
          reinterpret_cast<char*>(&other->credit_card_cvv_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditCardInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChargeRequest::_Internal {
 public:
  static const ::hipstershop::Money& amount(const ChargeRequest* msg);
  static const ::hipstershop::CreditCardInfo& credit_card(const ChargeRequest* msg);
};

const ::hipstershop::Money&
ChargeRequest::_Internal::amount(const ChargeRequest* msg) {
  return *msg->amount_;
}
const ::hipstershop::CreditCardInfo&
ChargeRequest::_Internal::credit_card(const ChargeRequest* msg) {
  return *msg->credit_card_;
}
ChargeRequest::ChargeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ChargeRequest)
}
ChargeRequest::ChargeRequest(const ChargeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_amount()) {
    amount_ = new ::hipstershop::Money(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  if (from._internal_has_credit_card()) {
    credit_card_ = new ::hipstershop::CreditCardInfo(*from.credit_card_);
  } else {
    credit_card_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.ChargeRequest)
}

void ChargeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChargeRequest_demo_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&credit_card_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(credit_card_));
}

ChargeRequest::~ChargeRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.ChargeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChargeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete amount_;
  if (this != internal_default_instance()) delete credit_card_;
}

void ChargeRequest::ArenaDtor(void* object) {
  ChargeRequest* _this = reinterpret_cast< ChargeRequest* >(object);
  (void)_this;
}
void ChargeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChargeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChargeRequest& ChargeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChargeRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void ChargeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ChargeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  if (GetArena() == nullptr && credit_card_ != nullptr) {
    delete credit_card_;
  }
  credit_card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChargeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.Money amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.CreditCardInfo credit_card = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_credit_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChargeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ChargeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.Money amount = 1;
  if (this->has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::amount(this), target, stream);
  }

  // .hipstershop.CreditCardInfo credit_card = 2;
  if (this->has_credit_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::credit_card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ChargeRequest)
  return target;
}

size_t ChargeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ChargeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hipstershop.Money amount = 1;
  if (this->has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  // .hipstershop.CreditCardInfo credit_card = 2;
  if (this->has_credit_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_card_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChargeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ChargeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChargeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChargeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ChargeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ChargeRequest)
    MergeFrom(*source);
  }
}

void ChargeRequest::MergeFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ChargeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_amount()) {
    _internal_mutable_amount()->::hipstershop::Money::MergeFrom(from._internal_amount());
  }
  if (from.has_credit_card()) {
    _internal_mutable_credit_card()->::hipstershop::CreditCardInfo::MergeFrom(from._internal_credit_card());
  }
}

void ChargeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeRequest::CopyFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeRequest::IsInitialized() const {
  return true;
}

void ChargeRequest::InternalSwap(ChargeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChargeRequest, credit_card_)
      + sizeof(ChargeRequest::credit_card_)
      - PROTOBUF_FIELD_OFFSET(ChargeRequest, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChargeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChargeResponse::_Internal {
 public:
};

ChargeResponse::ChargeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.ChargeResponse)
}
ChargeResponse::ChargeResponse(const ChargeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_transaction_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.ChargeResponse)
}

void ChargeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChargeResponse_demo_2eproto.base);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChargeResponse::~ChargeResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.ChargeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChargeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChargeResponse::ArenaDtor(void* object) {
  ChargeResponse* _this = reinterpret_cast< ChargeResponse* >(object);
  (void)_this;
}
void ChargeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChargeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChargeResponse& ChargeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChargeResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void ChargeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.ChargeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChargeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.ChargeResponse.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChargeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.ChargeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.ChargeResponse.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.ChargeResponse)
  return target;
}

size_t ChargeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.ChargeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChargeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.ChargeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChargeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChargeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.ChargeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.ChargeResponse)
    MergeFrom(*source);
  }
}

void ChargeResponse::MergeFrom(const ChargeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.ChargeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
}

void ChargeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.ChargeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeResponse::CopyFrom(const ChargeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.ChargeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeResponse::IsInitialized() const {
  return true;
}

void ChargeResponse::InternalSwap(ChargeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChargeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OrderItem::_Internal {
 public:
  static const ::hipstershop::CartItem& item(const OrderItem* msg);
  static const ::hipstershop::Money& cost(const OrderItem* msg);
};

const ::hipstershop::CartItem&
OrderItem::_Internal::item(const OrderItem* msg) {
  return *msg->item_;
}
const ::hipstershop::Money&
OrderItem::_Internal::cost(const OrderItem* msg) {
  return *msg->cost_;
}
OrderItem::OrderItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.OrderItem)
}
OrderItem::OrderItem(const OrderItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::hipstershop::CartItem(*from.item_);
  } else {
    item_ = nullptr;
  }
  if (from._internal_has_cost()) {
    cost_ = new ::hipstershop::Money(*from.cost_);
  } else {
    cost_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.OrderItem)
}

void OrderItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OrderItem_demo_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&item_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&item_)) + sizeof(cost_));
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:hipstershop.OrderItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OrderItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete item_;
  if (this != internal_default_instance()) delete cost_;
}

void OrderItem::ArenaDtor(void* object) {
  OrderItem* _this = reinterpret_cast< OrderItem* >(object);
  (void)_this;
}
void OrderItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrderItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OrderItem& OrderItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OrderItem_demo_2eproto.base);
  return *internal_default_instance();
}


void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.OrderItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  if (GetArena() == nullptr && cost_ != nullptr) {
    delete cost_;
  }
  cost_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.CartItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.Money cost = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OrderItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.OrderItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.CartItem item = 1;
  if (this->has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  // .hipstershop.Money cost = 2;
  if (this->has_cost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::cost(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.OrderItem)
  return target;
}

size_t OrderItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.OrderItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hipstershop.CartItem item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // .hipstershop.Money cost = 2;
  if (this->has_cost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cost_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OrderItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.OrderItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.OrderItem)
    MergeFrom(*source);
  }
}

void OrderItem::MergeFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    _internal_mutable_item()->::hipstershop::CartItem::MergeFrom(from._internal_item());
  }
  if (from.has_cost()) {
    _internal_mutable_cost()->::hipstershop::Money::MergeFrom(from._internal_cost());
  }
}

void OrderItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  return true;
}

void OrderItem::InternalSwap(OrderItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderItem, cost_)
      + sizeof(OrderItem::cost_)
      - PROTOBUF_FIELD_OFFSET(OrderItem, item_)>(
          reinterpret_cast<char*>(&item_),
          reinterpret_cast<char*>(&other->item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OrderResult::_Internal {
 public:
  static const ::hipstershop::Money& shipping_cost(const OrderResult* msg);
  static const ::hipstershop::Address& shipping_address(const OrderResult* msg);
};

const ::hipstershop::Money&
OrderResult::_Internal::shipping_cost(const OrderResult* msg) {
  return *msg->shipping_cost_;
}
const ::hipstershop::Address&
OrderResult::_Internal::shipping_address(const OrderResult* msg) {
  return *msg->shipping_address_;
}
OrderResult::OrderResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.OrderResult)
}
OrderResult::OrderResult(const OrderResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  order_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_id().empty()) {
    order_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_order_id(),
      GetArena());
  }
  shipping_tracking_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_shipping_tracking_id().empty()) {
    shipping_tracking_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_shipping_tracking_id(),
      GetArena());
  }
  if (from._internal_has_shipping_cost()) {
    shipping_cost_ = new ::hipstershop::Money(*from.shipping_cost_);
  } else {
    shipping_cost_ = nullptr;
  }
  if (from._internal_has_shipping_address()) {
    shipping_address_ = new ::hipstershop::Address(*from.shipping_address_);
  } else {
    shipping_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.OrderResult)
}

void OrderResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OrderResult_demo_2eproto.base);
  order_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shipping_tracking_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&shipping_cost_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&shipping_address_) -
      reinterpret_cast<char*>(&shipping_cost_)) + sizeof(shipping_address_));
}

OrderResult::~OrderResult() {
  // @@protoc_insertion_point(destructor:hipstershop.OrderResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OrderResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  order_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shipping_tracking_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shipping_cost_;
  if (this != internal_default_instance()) delete shipping_address_;
}

void OrderResult::ArenaDtor(void* object) {
  OrderResult* _this = reinterpret_cast< OrderResult* >(object);
  (void)_this;
}
void OrderResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrderResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OrderResult& OrderResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OrderResult_demo_2eproto.base);
  return *internal_default_instance();
}


void OrderResult::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.OrderResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  order_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shipping_tracking_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && shipping_cost_ != nullptr) {
    delete shipping_cost_;
  }
  shipping_cost_ = nullptr;
  if (GetArena() == nullptr && shipping_address_ != nullptr) {
    delete shipping_address_;
  }
  shipping_address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string order_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_order_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.OrderResult.order_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string shipping_tracking_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_shipping_tracking_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.OrderResult.shipping_tracking_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.Money shipping_cost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_shipping_cost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.Address shipping_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_shipping_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hipstershop.OrderItem items = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OrderResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.OrderResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id = 1;
  if (this->order_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id().data(), static_cast<int>(this->_internal_order_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.OrderResult.order_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id(), target);
  }

  // string shipping_tracking_id = 2;
  if (this->shipping_tracking_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shipping_tracking_id().data(), static_cast<int>(this->_internal_shipping_tracking_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.OrderResult.shipping_tracking_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_shipping_tracking_id(), target);
  }

  // .hipstershop.Money shipping_cost = 3;
  if (this->has_shipping_cost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::shipping_cost(this), target, stream);
  }

  // .hipstershop.Address shipping_address = 4;
  if (this->has_shipping_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::shipping_address(this), target, stream);
  }

  // repeated .hipstershop.OrderItem items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.OrderResult)
  return target;
}

size_t OrderResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.OrderResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.OrderItem items = 5;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string order_id = 1;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id());
  }

  // string shipping_tracking_id = 2;
  if (this->shipping_tracking_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shipping_tracking_id());
  }

  // .hipstershop.Money shipping_cost = 3;
  if (this->has_shipping_cost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *shipping_cost_);
  }

  // .hipstershop.Address shipping_address = 4;
  if (this->has_shipping_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *shipping_address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.OrderResult)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OrderResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.OrderResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.OrderResult)
    MergeFrom(*source);
  }
}

void OrderResult::MergeFrom(const OrderResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.OrderResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.order_id().size() > 0) {
    _internal_set_order_id(from._internal_order_id());
  }
  if (from.shipping_tracking_id().size() > 0) {
    _internal_set_shipping_tracking_id(from._internal_shipping_tracking_id());
  }
  if (from.has_shipping_cost()) {
    _internal_mutable_shipping_cost()->::hipstershop::Money::MergeFrom(from._internal_shipping_cost());
  }
  if (from.has_shipping_address()) {
    _internal_mutable_shipping_address()->::hipstershop::Address::MergeFrom(from._internal_shipping_address());
  }
}

void OrderResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.OrderResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderResult::CopyFrom(const OrderResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.OrderResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderResult::IsInitialized() const {
  return true;
}

void OrderResult::InternalSwap(OrderResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  order_id_.Swap(&other->order_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shipping_tracking_id_.Swap(&other->shipping_tracking_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderResult, shipping_address_)
      + sizeof(OrderResult::shipping_address_)
      - PROTOBUF_FIELD_OFFSET(OrderResult, shipping_cost_)>(
          reinterpret_cast<char*>(&shipping_cost_),
          reinterpret_cast<char*>(&other->shipping_cost_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SendOrderConfirmationRequest::_Internal {
 public:
  static const ::hipstershop::OrderResult& order(const SendOrderConfirmationRequest* msg);
};

const ::hipstershop::OrderResult&
SendOrderConfirmationRequest::_Internal::order(const SendOrderConfirmationRequest* msg) {
  return *msg->order_;
}
SendOrderConfirmationRequest::SendOrderConfirmationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.SendOrderConfirmationRequest)
}
SendOrderConfirmationRequest::SendOrderConfirmationRequest(const SendOrderConfirmationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  if (from._internal_has_order()) {
    order_ = new ::hipstershop::OrderResult(*from.order_);
  } else {
    order_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.SendOrderConfirmationRequest)
}

void SendOrderConfirmationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendOrderConfirmationRequest_demo_2eproto.base);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_ = nullptr;
}

SendOrderConfirmationRequest::~SendOrderConfirmationRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.SendOrderConfirmationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendOrderConfirmationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete order_;
}

void SendOrderConfirmationRequest::ArenaDtor(void* object) {
  SendOrderConfirmationRequest* _this = reinterpret_cast< SendOrderConfirmationRequest* >(object);
  (void)_this;
}
void SendOrderConfirmationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendOrderConfirmationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendOrderConfirmationRequest& SendOrderConfirmationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendOrderConfirmationRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void SendOrderConfirmationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.SendOrderConfirmationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && order_ != nullptr) {
    delete order_;
  }
  order_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendOrderConfirmationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.SendOrderConfirmationRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.OrderResult order = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_order(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendOrderConfirmationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.SendOrderConfirmationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.SendOrderConfirmationRequest.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // .hipstershop.OrderResult order = 2;
  if (this->has_order()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::order(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.SendOrderConfirmationRequest)
  return target;
}

size_t SendOrderConfirmationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.SendOrderConfirmationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .hipstershop.OrderResult order = 2;
  if (this->has_order()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *order_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendOrderConfirmationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.SendOrderConfirmationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendOrderConfirmationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendOrderConfirmationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.SendOrderConfirmationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.SendOrderConfirmationRequest)
    MergeFrom(*source);
  }
}

void SendOrderConfirmationRequest::MergeFrom(const SendOrderConfirmationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.SendOrderConfirmationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.has_order()) {
    _internal_mutable_order()->::hipstershop::OrderResult::MergeFrom(from._internal_order());
  }
}

void SendOrderConfirmationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.SendOrderConfirmationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendOrderConfirmationRequest::CopyFrom(const SendOrderConfirmationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.SendOrderConfirmationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendOrderConfirmationRequest::IsInitialized() const {
  return true;
}

void SendOrderConfirmationRequest::InternalSwap(SendOrderConfirmationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(order_, other->order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendOrderConfirmationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlaceOrderRequest::_Internal {
 public:
  static const ::hipstershop::Address& address(const PlaceOrderRequest* msg);
  static const ::hipstershop::CreditCardInfo& credit_card(const PlaceOrderRequest* msg);
};

const ::hipstershop::Address&
PlaceOrderRequest::_Internal::address(const PlaceOrderRequest* msg) {
  return *msg->address_;
}
const ::hipstershop::CreditCardInfo&
PlaceOrderRequest::_Internal::credit_card(const PlaceOrderRequest* msg) {
  return *msg->credit_card_;
}
PlaceOrderRequest::PlaceOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.PlaceOrderRequest)
}
PlaceOrderRequest::PlaceOrderRequest(const PlaceOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_id(),
      GetArena());
  }
  user_currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_currency().empty()) {
    user_currency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_currency(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  if (from._internal_has_address()) {
    address_ = new ::hipstershop::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_credit_card()) {
    credit_card_ = new ::hipstershop::CreditCardInfo(*from.credit_card_);
  } else {
    credit_card_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.PlaceOrderRequest)
}

void PlaceOrderRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlaceOrderRequest_demo_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&credit_card_) -
      reinterpret_cast<char*>(&address_)) + sizeof(credit_card_));
}

PlaceOrderRequest::~PlaceOrderRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.PlaceOrderRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlaceOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete credit_card_;
}

void PlaceOrderRequest::ArenaDtor(void* object) {
  PlaceOrderRequest* _this = reinterpret_cast< PlaceOrderRequest* >(object);
  (void)_this;
}
void PlaceOrderRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlaceOrderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlaceOrderRequest& PlaceOrderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlaceOrderRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void PlaceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.PlaceOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_currency_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && credit_card_ != nullptr) {
    delete credit_card_;
  }
  credit_card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaceOrderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.PlaceOrderRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_currency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.PlaceOrderRequest.user_currency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.Address address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.PlaceOrderRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .hipstershop.CreditCardInfo credit_card = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_credit_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlaceOrderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.PlaceOrderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.PlaceOrderRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // string user_currency = 2;
  if (this->user_currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_currency().data(), static_cast<int>(this->_internal_user_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.PlaceOrderRequest.user_currency");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_currency(), target);
  }

  // .hipstershop.Address address = 3;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::address(this), target, stream);
  }

  // string email = 5;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.PlaceOrderRequest.email");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_email(), target);
  }

  // .hipstershop.CreditCardInfo credit_card = 6;
  if (this->has_credit_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::credit_card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.PlaceOrderRequest)
  return target;
}

size_t PlaceOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.PlaceOrderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string user_currency = 2;
  if (this->user_currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_currency());
  }

  // string email = 5;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .hipstershop.Address address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .hipstershop.CreditCardInfo credit_card = 6;
  if (this->has_credit_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_card_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaceOrderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.PlaceOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceOrderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlaceOrderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.PlaceOrderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.PlaceOrderRequest)
    MergeFrom(*source);
  }
}

void PlaceOrderRequest::MergeFrom(const PlaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.PlaceOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from.user_currency().size() > 0) {
    _internal_set_user_currency(from._internal_user_currency());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::hipstershop::Address::MergeFrom(from._internal_address());
  }
  if (from.has_credit_card()) {
    _internal_mutable_credit_card()->::hipstershop::CreditCardInfo::MergeFrom(from._internal_credit_card());
  }
}

void PlaceOrderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.PlaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceOrderRequest::CopyFrom(const PlaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.PlaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceOrderRequest::IsInitialized() const {
  return true;
}

void PlaceOrderRequest::InternalSwap(PlaceOrderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_currency_.Swap(&other->user_currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, credit_card_)
      + sizeof(PlaceOrderRequest::credit_card_)
      - PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaceOrderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlaceOrderResponse::_Internal {
 public:
  static const ::hipstershop::OrderResult& order(const PlaceOrderResponse* msg);
};

const ::hipstershop::OrderResult&
PlaceOrderResponse::_Internal::order(const PlaceOrderResponse* msg) {
  return *msg->order_;
}
PlaceOrderResponse::PlaceOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.PlaceOrderResponse)
}
PlaceOrderResponse::PlaceOrderResponse(const PlaceOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_order()) {
    order_ = new ::hipstershop::OrderResult(*from.order_);
  } else {
    order_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.PlaceOrderResponse)
}

void PlaceOrderResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlaceOrderResponse_demo_2eproto.base);
  order_ = nullptr;
}

PlaceOrderResponse::~PlaceOrderResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.PlaceOrderResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlaceOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete order_;
}

void PlaceOrderResponse::ArenaDtor(void* object) {
  PlaceOrderResponse* _this = reinterpret_cast< PlaceOrderResponse* >(object);
  (void)_this;
}
void PlaceOrderResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlaceOrderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlaceOrderResponse& PlaceOrderResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlaceOrderResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void PlaceOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.PlaceOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && order_ != nullptr) {
    delete order_;
  }
  order_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaceOrderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .hipstershop.OrderResult order = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_order(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlaceOrderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.PlaceOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hipstershop.OrderResult order = 1;
  if (this->has_order()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::order(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.PlaceOrderResponse)
  return target;
}

size_t PlaceOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.PlaceOrderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .hipstershop.OrderResult order = 1;
  if (this->has_order()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *order_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaceOrderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.PlaceOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceOrderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlaceOrderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.PlaceOrderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.PlaceOrderResponse)
    MergeFrom(*source);
  }
}

void PlaceOrderResponse::MergeFrom(const PlaceOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.PlaceOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    _internal_mutable_order()->::hipstershop::OrderResult::MergeFrom(from._internal_order());
  }
}

void PlaceOrderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.PlaceOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceOrderResponse::CopyFrom(const PlaceOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.PlaceOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceOrderResponse::IsInitialized() const {
  return true;
}

void PlaceOrderResponse::InternalSwap(PlaceOrderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(order_, other->order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaceOrderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AdRequest::_Internal {
 public:
};

AdRequest::AdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  context_keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.AdRequest)
}
AdRequest::AdRequest(const AdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      context_keys_(from.context_keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.AdRequest)
}

void AdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdRequest_demo_2eproto.base);
}

AdRequest::~AdRequest() {
  // @@protoc_insertion_point(destructor:hipstershop.AdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AdRequest::ArenaDtor(void* object) {
  AdRequest* _this = reinterpret_cast< AdRequest* >(object);
  (void)_this;
}
void AdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdRequest& AdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdRequest_demo_2eproto.base);
  return *internal_default_instance();
}


void AdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.AdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_keys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string context_keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_context_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.AdRequest.context_keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.AdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string context_keys = 1;
  for (int i = 0, n = this->_internal_context_keys_size(); i < n; i++) {
    const auto& s = this->_internal_context_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.AdRequest.context_keys");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.AdRequest)
  return target;
}

size_t AdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.AdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string context_keys = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(context_keys_.size());
  for (int i = 0, n = context_keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      context_keys_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.AdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.AdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.AdRequest)
    MergeFrom(*source);
  }
}

void AdRequest::MergeFrom(const AdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.AdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  context_keys_.MergeFrom(from.context_keys_);
}

void AdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.AdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdRequest::CopyFrom(const AdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.AdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdRequest::IsInitialized() const {
  return true;
}

void AdRequest::InternalSwap(AdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  context_keys_.InternalSwap(&other->context_keys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AdResponse::_Internal {
 public:
};

AdResponse::AdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ads_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.AdResponse)
}
AdResponse::AdResponse(const AdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ads_(from.ads_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hipstershop.AdResponse)
}

void AdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdResponse_demo_2eproto.base);
}

AdResponse::~AdResponse() {
  // @@protoc_insertion_point(destructor:hipstershop.AdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AdResponse::ArenaDtor(void* object) {
  AdResponse* _this = reinterpret_cast< AdResponse* >(object);
  (void)_this;
}
void AdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdResponse& AdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdResponse_demo_2eproto.base);
  return *internal_default_instance();
}


void AdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.AdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ads_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hipstershop.Ad ads = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ads(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.AdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hipstershop.Ad ads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ads_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ads(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.AdResponse)
  return target;
}

size_t AdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.AdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hipstershop.Ad ads = 1;
  total_size += 1UL * this->_internal_ads_size();
  for (const auto& msg : this->ads_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.AdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.AdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.AdResponse)
    MergeFrom(*source);
  }
}

void AdResponse::MergeFrom(const AdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.AdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ads_.MergeFrom(from.ads_);
}

void AdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.AdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdResponse::CopyFrom(const AdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.AdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdResponse::IsInitialized() const {
  return true;
}

void AdResponse::InternalSwap(AdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ads_.InternalSwap(&other->ads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Ad::_Internal {
 public:
};

Ad::Ad(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hipstershop.Ad)
}
Ad::Ad(const Ad& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  redirect_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redirect_url().empty()) {
    redirect_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_redirect_url(),
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hipstershop.Ad)
}

void Ad::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Ad_demo_2eproto.base);
  redirect_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Ad::~Ad() {
  // @@protoc_insertion_point(destructor:hipstershop.Ad)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ad::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  redirect_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Ad::ArenaDtor(void* object) {
  Ad* _this = reinterpret_cast< Ad* >(object);
  (void)_this;
}
void Ad::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ad& Ad::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ad_demo_2eproto.base);
  return *internal_default_instance();
}


void Ad::Clear() {
// @@protoc_insertion_point(message_clear_start:hipstershop.Ad)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redirect_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ad::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string redirect_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_redirect_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Ad.redirect_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hipstershop.Ad.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ad::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hipstershop.Ad)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string redirect_url = 1;
  if (this->redirect_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect_url().data(), static_cast<int>(this->_internal_redirect_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Ad.redirect_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_redirect_url(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hipstershop.Ad.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hipstershop.Ad)
  return target;
}

size_t Ad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hipstershop.Ad)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string redirect_url = 1;
  if (this->redirect_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect_url());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ad::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hipstershop.Ad)
  GOOGLE_DCHECK_NE(&from, this);
  const Ad* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ad>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hipstershop.Ad)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hipstershop.Ad)
    MergeFrom(*source);
  }
}

void Ad::MergeFrom(const Ad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hipstershop.Ad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redirect_url().size() > 0) {
    _internal_set_redirect_url(from._internal_redirect_url());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
}

void Ad::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hipstershop.Ad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ad::CopyFrom(const Ad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hipstershop.Ad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ad::IsInitialized() const {
  return true;
}

void Ad::InternalSwap(Ad* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  redirect_url_.Swap(&other->redirect_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Ad::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hipstershop
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hipstershop::CartItem* Arena::CreateMaybeMessage< ::hipstershop::CartItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::CartItem >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::AddItemRequest* Arena::CreateMaybeMessage< ::hipstershop::AddItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::AddItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::EmptyCartRequest* Arena::CreateMaybeMessage< ::hipstershop::EmptyCartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::EmptyCartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::GetCartRequest* Arena::CreateMaybeMessage< ::hipstershop::GetCartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::GetCartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Cart* Arena::CreateMaybeMessage< ::hipstershop::Cart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Cart >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Empty* Arena::CreateMaybeMessage< ::hipstershop::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ListRecommendationsRequest* Arena::CreateMaybeMessage< ::hipstershop::ListRecommendationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ListRecommendationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ListRecommendationsResponse* Arena::CreateMaybeMessage< ::hipstershop::ListRecommendationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ListRecommendationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Product* Arena::CreateMaybeMessage< ::hipstershop::Product >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Product >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ListProductsResponse* Arena::CreateMaybeMessage< ::hipstershop::ListProductsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ListProductsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::GetProductRequest* Arena::CreateMaybeMessage< ::hipstershop::GetProductRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::GetProductRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::SearchProductsRequest* Arena::CreateMaybeMessage< ::hipstershop::SearchProductsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::SearchProductsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::SearchProductsResponse* Arena::CreateMaybeMessage< ::hipstershop::SearchProductsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::SearchProductsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::GetQuoteRequest* Arena::CreateMaybeMessage< ::hipstershop::GetQuoteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::GetQuoteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::GetQuoteResponse* Arena::CreateMaybeMessage< ::hipstershop::GetQuoteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::GetQuoteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ShipOrderRequest* Arena::CreateMaybeMessage< ::hipstershop::ShipOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ShipOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ShipOrderResponse* Arena::CreateMaybeMessage< ::hipstershop::ShipOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ShipOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Address* Arena::CreateMaybeMessage< ::hipstershop::Address >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Address >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Money* Arena::CreateMaybeMessage< ::hipstershop::Money >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Money >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::GetSupportedCurrenciesResponse* Arena::CreateMaybeMessage< ::hipstershop::GetSupportedCurrenciesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::GetSupportedCurrenciesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::CurrencyConversionRequest* Arena::CreateMaybeMessage< ::hipstershop::CurrencyConversionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::CurrencyConversionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::CreditCardInfo* Arena::CreateMaybeMessage< ::hipstershop::CreditCardInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::CreditCardInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ChargeRequest* Arena::CreateMaybeMessage< ::hipstershop::ChargeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ChargeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::ChargeResponse* Arena::CreateMaybeMessage< ::hipstershop::ChargeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::ChargeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::OrderItem* Arena::CreateMaybeMessage< ::hipstershop::OrderItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::OrderItem >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::OrderResult* Arena::CreateMaybeMessage< ::hipstershop::OrderResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::OrderResult >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::SendOrderConfirmationRequest* Arena::CreateMaybeMessage< ::hipstershop::SendOrderConfirmationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::SendOrderConfirmationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::PlaceOrderRequest* Arena::CreateMaybeMessage< ::hipstershop::PlaceOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::PlaceOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::PlaceOrderResponse* Arena::CreateMaybeMessage< ::hipstershop::PlaceOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::PlaceOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::AdRequest* Arena::CreateMaybeMessage< ::hipstershop::AdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::AdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::AdResponse* Arena::CreateMaybeMessage< ::hipstershop::AdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::AdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::hipstershop::Ad* Arena::CreateMaybeMessage< ::hipstershop::Ad >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hipstershop::Ad >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
