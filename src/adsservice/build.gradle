description = 'OpenCensus Examples'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
    mavenLocal()
}

group = "adservice"
version = "0.1.0-SNAPSHOT" // CURRENT_OPENCENSUS_VERSION

def opencensusVersion = "0.14.0" // LATEST_OPENCENSUS_RELEASE_VERSION
def grpcVersion = "1.10.1" // CURRENT_GRPC_VERSION
def prometheusVersion = "0.3.0"

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

dependencies {
    compile "com.google.api.grpc:proto-google-common-protos:1.11.0",
            "io.opencensus:opencensus-exporter-stats-prometheus:${opencensusVersion}",
            "io.opencensus:opencensus-exporter-stats-stackdriver:${opencensusVersion}",
            "io.opencensus:opencensus-exporter-trace-stackdriver:${opencensusVersion}",
            "io.opencensus:opencensus-exporter-trace-logging:${opencensusVersion}",
            "io.grpc:grpc-protobuf:${grpcVersion}",
            "io.grpc:grpc-stub:${grpcVersion}",
            "io.grpc:grpc-netty:${grpcVersion}",
            "io.prometheus:simpleclient_httpserver:${prometheusVersion}"

    runtime "io.opencensus:opencensus-impl:${opencensusVersion}",
            "io.netty:netty-tcnative-boringssl-static:2.0.8.Final"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'hipstershop'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc/hipstershop'
        }
    }
}

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false

task adsService(type: CreateStartScripts) {
    mainClassName = 'hipstershop.AdsService'
    applicationName = 'AdsService'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task adsServiceClient(type: CreateStartScripts) {
    mainClassName = 'hipstershop.AdsServiceClient'
    applicationName = 'AdsServiceClient'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(adsService)
    from(adsServiceClient)
    fileMode = 0755
}
