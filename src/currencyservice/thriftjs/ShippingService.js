//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./demo_types');
//HELPER FUNCTIONS AND STRUCTURES

var ShippingService_GetQuote_args = function(args) {
  this.address = null;
  this.items = null;
  if (args) {
    if (args.address !== undefined && args.address !== null) {
      this.address = new ttypes.Address(args.address);
    }
    if (args.items !== undefined && args.items !== null) {
      this.items = Thrift.copyList(args.items, [ttypes.CartItem]);
    }
  }
};
ShippingService_GetQuote_args.prototype = {};
ShippingService_GetQuote_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.address = new ttypes.Address();
        this.address.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.items = [];
        var _rtmp336 = input.readListBegin();
        var _size35 = _rtmp336.size || 0;
        for (var _i37 = 0; _i37 < _size35; ++_i37) {
          var elem38 = null;
          elem38 = new ttypes.CartItem();
          elem38.read(input);
          this.items.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ShippingService_GetQuote_args.prototype.write = function(output) {
  output.writeStructBegin('ShippingService_GetQuote_args');
  if (this.address !== null && this.address !== undefined) {
    output.writeFieldBegin('address', Thrift.Type.STRUCT, 1);
    this.address.write(output);
    output.writeFieldEnd();
  }
  if (this.items !== null && this.items !== undefined) {
    output.writeFieldBegin('items', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.items.length);
    for (var iter39 in this.items) {
      if (this.items.hasOwnProperty(iter39)) {
        iter39 = this.items[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ShippingService_GetQuote_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.Money(args.success);
    }
  }
};
ShippingService_GetQuote_result.prototype = {};
ShippingService_GetQuote_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.Money();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ShippingService_GetQuote_result.prototype.write = function(output) {
  output.writeStructBegin('ShippingService_GetQuote_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ShippingService_ShipOrder_args = function(args) {
  this.address = null;
  this.items = null;
  if (args) {
    if (args.address !== undefined && args.address !== null) {
      this.address = new ttypes.Address(args.address);
    }
    if (args.items !== undefined && args.items !== null) {
      this.items = Thrift.copyList(args.items, [ttypes.CartItem]);
    }
  }
};
ShippingService_ShipOrder_args.prototype = {};
ShippingService_ShipOrder_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.address = new ttypes.Address();
        this.address.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.items = [];
        var _rtmp341 = input.readListBegin();
        var _size40 = _rtmp341.size || 0;
        for (var _i42 = 0; _i42 < _size40; ++_i42) {
          var elem43 = null;
          elem43 = new ttypes.CartItem();
          elem43.read(input);
          this.items.push(elem43);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ShippingService_ShipOrder_args.prototype.write = function(output) {
  output.writeStructBegin('ShippingService_ShipOrder_args');
  if (this.address !== null && this.address !== undefined) {
    output.writeFieldBegin('address', Thrift.Type.STRUCT, 1);
    this.address.write(output);
    output.writeFieldEnd();
  }
  if (this.items !== null && this.items !== undefined) {
    output.writeFieldBegin('items', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.items.length);
    for (var iter44 in this.items) {
      if (this.items.hasOwnProperty(iter44)) {
        iter44 = this.items[iter44];
        iter44.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ShippingService_ShipOrder_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
ShippingService_ShipOrder_result.prototype = {};
ShippingService_ShipOrder_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ShippingService_ShipOrder_result.prototype.write = function(output) {
  output.writeStructBegin('ShippingService_ShipOrder_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ShippingServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
ShippingServiceClient.prototype = {};
ShippingServiceClient.prototype.seqid = function() { return this._seqid; };
ShippingServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

ShippingServiceClient.prototype.GetQuote = function(address, items, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_GetQuote(address, items);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_GetQuote(address, items);
  }
};

ShippingServiceClient.prototype.send_GetQuote = function(address, items) {
  var output = new this.pClass(this.output);
  var params = {
    address: address,
    items: items
  };
  var args = new ShippingService_GetQuote_args(params);
  try {
    output.writeMessageBegin('GetQuote', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

ShippingServiceClient.prototype.recv_GetQuote = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ShippingService_GetQuote_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('GetQuote failed: unknown result');
};

ShippingServiceClient.prototype.ShipOrder = function(address, items, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ShipOrder(address, items);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ShipOrder(address, items);
  }
};

ShippingServiceClient.prototype.send_ShipOrder = function(address, items) {
  var output = new this.pClass(this.output);
  var params = {
    address: address,
    items: items
  };
  var args = new ShippingService_ShipOrder_args(params);
  try {
    output.writeMessageBegin('ShipOrder', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

ShippingServiceClient.prototype.recv_ShipOrder = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ShippingService_ShipOrder_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ShipOrder failed: unknown result');
};
var ShippingServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
ShippingServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
ShippingServiceProcessor.prototype.process_GetQuote = function(seqid, input, output) {
  var args = new ShippingService_GetQuote_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.GetQuote.length === 2) {
    Q.fcall(this._handler.GetQuote.bind(this._handler),
      args.address,
      args.items
    ).then(function(result) {
      var result_obj = new ShippingService_GetQuote_result({success: result});
      output.writeMessageBegin("GetQuote", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("GetQuote", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.GetQuote(args.address, args.items, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ShippingService_GetQuote_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("GetQuote", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("GetQuote", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ShippingServiceProcessor.prototype.process_ShipOrder = function(seqid, input, output) {
  var args = new ShippingService_ShipOrder_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ShipOrder.length === 2) {
    Q.fcall(this._handler.ShipOrder.bind(this._handler),
      args.address,
      args.items
    ).then(function(result) {
      var result_obj = new ShippingService_ShipOrder_result({success: result});
      output.writeMessageBegin("ShipOrder", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("ShipOrder", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.ShipOrder(args.address, args.items, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ShippingService_ShipOrder_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("ShipOrder", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ShipOrder", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
