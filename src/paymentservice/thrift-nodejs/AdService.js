//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./demo_types');
//HELPER FUNCTIONS AND STRUCTURES

var AdService_GetAds_args = function(args) {
  this.context_keys = null;
  if (args) {
    if (args.context_keys !== undefined && args.context_keys !== null) {
      this.context_keys = Thrift.copyList(args.context_keys, [null]);
    }
  }
};
AdService_GetAds_args.prototype = {};
AdService_GetAds_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        this.context_keys = [];
        var _rtmp351 = input.readListBegin();
        var _size50 = _rtmp351.size || 0;
        for (var _i52 = 0; _i52 < _size50; ++_i52) {
          var elem53 = null;
          elem53 = input.readString();
          this.context_keys.push(elem53);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdService_GetAds_args.prototype.write = function(output) {
  output.writeStructBegin('AdService_GetAds_args');
  if (this.context_keys !== null && this.context_keys !== undefined) {
    output.writeFieldBegin('context_keys', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.context_keys.length);
    for (var iter54 in this.context_keys) {
      if (this.context_keys.hasOwnProperty(iter54)) {
        iter54 = this.context_keys[iter54];
        output.writeString(iter54);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AdService_GetAds_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [null]);
    }
  }
};
AdService_GetAds_result.prototype = {};
AdService_GetAds_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp356 = input.readListBegin();
        var _size55 = _rtmp356.size || 0;
        for (var _i57 = 0; _i57 < _size55; ++_i57) {
          var elem58 = null;
          elem58 = new ttypes.Ad();
          elem58.read(input);
          this.success.push(elem58);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdService_GetAds_result.prototype.write = function(output) {
  output.writeStructBegin('AdService_GetAds_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter59 in this.success) {
      if (this.success.hasOwnProperty(iter59)) {
        iter59 = this.success[iter59];
        iter59.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AdServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
AdServiceClient.prototype = {};
AdServiceClient.prototype.seqid = function() { return this._seqid; };
AdServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

AdServiceClient.prototype.GetAds = function(context_keys, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_GetAds(context_keys);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_GetAds(context_keys);
  }
};

AdServiceClient.prototype.send_GetAds = function(context_keys) {
  var output = new this.pClass(this.output);
  var params = {
    context_keys: context_keys
  };
  var args = new AdService_GetAds_args(params);
  try {
    output.writeMessageBegin('GetAds', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

AdServiceClient.prototype.recv_GetAds = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AdService_GetAds_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('GetAds failed: unknown result');
};
var AdServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
AdServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
AdServiceProcessor.prototype.process_GetAds = function(seqid, input, output) {
  var args = new AdService_GetAds_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.GetAds.length === 1) {
    Q.fcall(this._handler.GetAds.bind(this._handler),
      args.context_keys
    ).then(function(result) {
      var result_obj = new AdService_GetAds_result({success: result});
      output.writeMessageBegin("GetAds", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("GetAds", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.GetAds(args.context_keys, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new AdService_GetAds_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("GetAds", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("GetAds", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
